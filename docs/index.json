[
  {
    "__docId__": 0,
    "kind": "file",
    "name": "src/.doc-types.js",
    "content": "/**\n * @typedef {string|number|Object|boolean} ProxyValue - Emits the scoped event when this property changes.\n */\n\n/**\n * @typedef {Object} ComponentData\n * @property {string} id - The component class name, used by the {@link ResourceProvider}\n *  to pull the component class.\n * @property {*} [*] - Any data.\n */\n\n/**\n * @typedef {ComponentData} Component\n */\n\n/**\n * @typedef {Object} EntityData\n * @property {string} [_primaryMesh] - Optional ID of component that holds entity's\n *  primary mesh object.\n * @property {ComponentData} [*] - Component properties.\n * @example <caption>ID: 'objects.sphere'</caption>\n * objects = {\n *     sphere: {\n *         _primaryMesh: 'MyMeshComponent',\n *\n *         MyMeshComponent: {position: {x: 0, y: 5, z: 0}},\n *         MyLogicComponent: {value: 'foobar'}\n *     }\n * };\n */\n\n/**\n * @typedef {EntityData} EntityMetaData\n * @property {string} id - The generic Entity ID, used by the {@link ResourceProvider}\n *  to pull the data.\n * @property {string} uid - the instance-specific identifier.\n * @example <caption>Basic Definition</caption>\n * let entityData1 = {id: 'objects.sphere', uid: 'myFirstSphere'};\n * @example <caption>Advanced Definition</caption>\n * let entityData2 = {\n *     id: 'objects.sphere',\n *     uid: 'mySecondSphere',\n *     MyMeshComponent: {rotation: {y: Math.PI},\n *     MyLogicComponent: {value: 42} // This will override the default definition.\n * };\n */\n\n /**\n * @typedef {Object} EntityInstance\n * @property {string} id - The Entity ID.\n * @property {string} uid - The unique identifier for the entity instance.\n * @property {Component|undefined} mesh - The component that holds the primary mesh\n *  object for the entity.\n * @property {function(engine: Engine, time: number, deltaTime: number): undefined} tick -\n *  Executes all registered component tick methods.\n * @property {Promise<Component>} meshAsync - Wait for entity's mesh component to be\n *  set and get the value, asynchronously.\n */\n\n/**\n * @typedef {class} ComponentClass - A static class for a component\n * @example <caption>Basic Logic Component</caption>\n * class MyLogicComponent {\n *     constructor(engine, entity, id, {value}) {\n *         this.id = id;\n *         this.value = value;\n *         this.enabled = true;\n *         entity.tick = {id, tick: MyLogicComponent.tick};\n *         return comp;\n *     }\n *     disableMe() {\n *         this.enabled = false;\n *     }\n *     static update(engine, entity, comp, id, data) {\n *         if (!comp) {\n *             comp = new MyLogicComponent(engine, entity, id, data);\n *         } else {\n *             comp.value = data.value;\n *         }\n *         return comp;\n *     }\n *     static dismount(engine, entity, comp) {\n *         delete comp.value;\n *         return null;\n *     }\n *     static tick(engine, entity, comp, t, dt) {\n *         if (comp.enabled) {\n *             engine.ctrl.target.AnotherComponent.doSomething(comp.value);\n *         }\n *     }\n * }\n * @example <caption>BabylonJS Object Wrapper</caption>\n * class MyMeshComponent {\n *     static create(engine, entity, id, meshData) {\n *         const comp = {id, baby: null};\n *\n *         return someFancyAsyncAction().then(() => {\n *             comp.baby = engine.GL.Mesh.CreateSphere('mySphere', 10, 2, engine.scene.baby);\n *             Object.assign(comp.baby, meshData);\n *             return comp;\n *          });\n *     static update(engine, entity, comp, id, data) {\n *         if (!comp) {\n *             return this.create(engine, entity, id, data);\n *         }\n *         Object.assign(comp.baby, data);\n *         return Promise.resolve(comp);\n *     }\n *     static dismount(engine, entity, comp) {\n *          comp.baby.dispose();\n *          delete comp.baby;\n *          return null;\n *     }\n * }\n */\n/**\n * @typedef {Object} ResourceProvider\n * @property {function(id: string): EntityData} getEntity - Raw object containing default component definitions for Entity ID.\n * @property {function(id: string): ComponentClass} getComponent - Static component class for Component ID.\n */\n/**\n * @typedef {function(): Promise<ResourceProvider>} ResourceLoader\n */\n\n/**\n * @typedef {function(engine: Engine, k: string, down: bool)} KeyHandler\n */\n/**\n * @typedef {Object} KeyDefinition\n * @property {string} key\n * @property {KeyHandler} [handler] - The handler function for both key up and down.\n * @property {KeyHandler} [upHandler] - The handler specifically for key up.\n * @property {KeyHandler} [downHandler] - The handler specifically for key down.\n */\n/**\n * @typedef {Object} Settings\n * @property {bool} [debug=false]\n * @property {Object} [input]\n * @property {KeyDefinition[]} [input.keys]\n * @property {number} [statsInterval=1000]\n */\n\n/**\n * @typedef {Object} Logger\n * @property {function} info\n * @property {function} debug\n * @property {function} warn\n * @property {function} error\n */\n",
    "static": true,
    "longname": "/Users/zimmed/Bavel/bavel/src/.doc-types.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1,
    "kind": "typedef",
    "name": "ProxyValue",
    "memberof": "src/.doc-types.js",
    "static": true,
    "longname": "src/.doc-types.js~ProxyValue",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "string",
        "number",
        "Object",
        "boolean"
      ],
      "optional": false,
      "name": "ProxyValue"
    }
  },
  {
    "__docId__": 2,
    "kind": "typedef",
    "name": "ComponentData",
    "memberof": "src/.doc-types.js",
    "static": true,
    "longname": "src/.doc-types.js~ComponentData",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The component class name, used by the {@link ResourceProvider}\n to pull the component class."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "name": "*",
        "description": "Any data."
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "ComponentData"
    }
  },
  {
    "__docId__": 3,
    "kind": "typedef",
    "name": "Component",
    "memberof": "src/.doc-types.js",
    "static": true,
    "longname": "src/.doc-types.js~Component",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "ComponentData"
      ],
      "optional": false,
      "name": "Component"
    }
  },
  {
    "__docId__": 4,
    "kind": "typedef",
    "name": "EntityData",
    "memberof": "src/.doc-types.js",
    "static": true,
    "longname": "src/.doc-types.js~EntityData",
    "access": "public",
    "description": "",
    "examples": [
      "<caption>ID: 'objects.sphere'</caption>\nobjects = {\n    sphere: {\n        _primaryMesh: 'MyMeshComponent',\n\n        MyMeshComponent: {position: {x: 0, y: 5, z: 0}},\n        MyLogicComponent: {value: 'foobar'}\n    }\n};"
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "_primaryMesh",
        "description": "Optional ID of component that holds entity's\n primary mesh object."
      },
      {
        "nullable": null,
        "types": [
          "ComponentData"
        ],
        "spread": false,
        "optional": true,
        "name": "*",
        "description": "Component properties."
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "EntityData"
    }
  },
  {
    "__docId__": 5,
    "kind": "typedef",
    "name": "EntityMetaData",
    "memberof": "src/.doc-types.js",
    "static": true,
    "longname": "src/.doc-types.js~EntityMetaData",
    "access": "public",
    "description": "",
    "examples": [
      "<caption>Basic Definition</caption>\nlet entityData1 = {id: 'objects.sphere', uid: 'myFirstSphere'};",
      "<caption>Advanced Definition</caption>\nlet entityData2 = {\n    id: 'objects.sphere',\n    uid: 'mySecondSphere',\n    MyMeshComponent: {rotation: {y: Math.PI},\n    MyLogicComponent: {value: 42} // This will override the default definition.\n};"
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The generic Entity ID, used by the {@link ResourceProvider}\n to pull the data."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "uid",
        "description": "the instance-specific identifier."
      }
    ],
    "type": {
      "types": [
        "EntityData"
      ],
      "optional": false,
      "name": "EntityMetaData"
    }
  },
  {
    "__docId__": 6,
    "kind": "typedef",
    "name": "EntityInstance",
    "memberof": "src/.doc-types.js",
    "static": true,
    "longname": "src/.doc-types.js~EntityInstance",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The Entity ID."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "uid",
        "description": "The unique identifier for the entity instance."
      },
      {
        "nullable": null,
        "types": [
          "Component",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "mesh",
        "description": "The component that holds the primary mesh\n object for the entity."
      },
      {
        "nullable": null,
        "types": [
          "function(engine: Engine, time: number, deltaTime: number): undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "tick",
        "description": "Executes all registered component tick methods."
      },
      {
        "nullable": null,
        "types": [
          "Promise<Component>"
        ],
        "spread": false,
        "optional": false,
        "name": "meshAsync",
        "description": "Wait for entity's mesh component to be\n set and get the value, asynchronously."
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "EntityInstance"
    }
  },
  {
    "__docId__": 7,
    "kind": "typedef",
    "name": "ComponentClass",
    "memberof": "src/.doc-types.js",
    "static": true,
    "longname": "src/.doc-types.js~ComponentClass",
    "access": "public",
    "description": "",
    "examples": [
      "<caption>Basic Logic Component</caption>\nclass MyLogicComponent {\n    constructor(engine, entity, id, {value}) {\n        this.id = id;\n        this.value = value;\n        this.enabled = true;\n        entity.tick = {id, tick: MyLogicComponent.tick};\n        return comp;\n    }\n    disableMe() {\n        this.enabled = false;\n    }\n    static update(engine, entity, comp, id, data) {\n        if (!comp) {\n            comp = new MyLogicComponent(engine, entity, id, data);\n        } else {\n            comp.value = data.value;\n        }\n        return comp;\n    }\n    static dismount(engine, entity, comp) {\n        delete comp.value;\n        return null;\n    }\n    static tick(engine, entity, comp, t, dt) {\n        if (comp.enabled) {\n            engine.ctrl.target.AnotherComponent.doSomething(comp.value);\n        }\n    }\n}",
      "<caption>BabylonJS Object Wrapper</caption>\nclass MyMeshComponent {\n    static create(engine, entity, id, meshData) {\n        const comp = {id, baby: null};\n\n        return someFancyAsyncAction().then(() => {\n            comp.baby = engine.GL.Mesh.CreateSphere('mySphere', 10, 2, engine.scene.baby);\n            Object.assign(comp.baby, meshData);\n            return comp;\n         });\n    static update(engine, entity, comp, id, data) {\n        if (!comp) {\n            return this.create(engine, entity, id, data);\n        }\n        Object.assign(comp.baby, data);\n        return Promise.resolve(comp);\n    }\n    static dismount(engine, entity, comp) {\n         comp.baby.dispose();\n         delete comp.baby;\n         return null;\n    }\n}"
    ],
    "type": {
      "types": [
        "class"
      ],
      "optional": false,
      "name": "ComponentClass"
    }
  },
  {
    "__docId__": 8,
    "kind": "typedef",
    "name": "ResourceProvider",
    "memberof": "src/.doc-types.js",
    "static": true,
    "longname": "src/.doc-types.js~ResourceProvider",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "function(id: string): EntityData"
        ],
        "spread": false,
        "optional": false,
        "name": "getEntity",
        "description": "Raw object containing default component definitions for Entity ID."
      },
      {
        "nullable": null,
        "types": [
          "function(id: string): ComponentClass"
        ],
        "spread": false,
        "optional": false,
        "name": "getComponent",
        "description": "Static component class for Component ID."
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "ResourceProvider"
    }
  },
  {
    "__docId__": 9,
    "kind": "typedef",
    "name": "ResourceLoader",
    "memberof": "src/.doc-types.js",
    "static": true,
    "longname": "src/.doc-types.js~ResourceLoader",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "function(): Promise<ResourceProvider>"
      ],
      "optional": false,
      "name": "ResourceLoader"
    }
  },
  {
    "__docId__": 10,
    "kind": "typedef",
    "name": "KeyHandler",
    "memberof": "src/.doc-types.js",
    "static": true,
    "longname": "src/.doc-types.js~KeyHandler",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "function(engine: Engine, k: string, down: bool)"
      ],
      "optional": false,
      "name": "KeyHandler"
    }
  },
  {
    "__docId__": 11,
    "kind": "typedef",
    "name": "KeyDefinition",
    "memberof": "src/.doc-types.js",
    "static": true,
    "longname": "src/.doc-types.js~KeyDefinition",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "KeyHandler"
        ],
        "spread": false,
        "optional": true,
        "name": "handler",
        "description": "The handler function for both key up and down."
      },
      {
        "nullable": null,
        "types": [
          "KeyHandler"
        ],
        "spread": false,
        "optional": true,
        "name": "upHandler",
        "description": "The handler specifically for key up."
      },
      {
        "nullable": null,
        "types": [
          "KeyHandler"
        ],
        "spread": false,
        "optional": true,
        "name": "downHandler",
        "description": "The handler specifically for key down."
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "KeyDefinition"
    }
  },
  {
    "__docId__": 12,
    "kind": "typedef",
    "name": "Settings",
    "memberof": "src/.doc-types.js",
    "static": true,
    "longname": "src/.doc-types.js~Settings",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "bool"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "debug",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "input",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "KeyDefinition[]"
        ],
        "spread": false,
        "optional": true,
        "name": "input.keys",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1000",
        "defaultRaw": 1000,
        "name": "statsInterval",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "Settings"
    }
  },
  {
    "__docId__": 13,
    "kind": "typedef",
    "name": "Logger",
    "memberof": "src/.doc-types.js",
    "static": true,
    "longname": "src/.doc-types.js~Logger",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "info",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "debug",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "warn",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "error",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "Logger"
    }
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 49,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 50,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 51,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 52,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 53,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 54,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 55,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 56,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 57,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 58,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 59,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 60,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 61,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 62,
    "kind": "file",
    "name": "src/Engine.js",
    "content": "import forEach from 'lodash.foreach';\nimport get from 'lodash.get';\nimport noop from 'lodash.noop';\nimport Scene from 'src/Scene';\nimport StateEventProxy from 'src/StateEventProxy';\nimport stateEvents from 'src/stateEvents';\nimport PlayerController from 'src/PlayerController';\n\n// Cannot use require.ensure when not using webpack (i.e., mocha environment)\n//  so this polyfill is required to not break run.\nif (typeof require.ensure !== 'function') {\n    require.ensure = (dep='', cb) => cb(dep);\n}\n\n/**\n * Promisified require.ensure.\n * \n * @param {Array|string} deps - Dependencies to ensure.\n * @param {string} [chunk] - Optional chunk name.\n * @returns {Promise<undefined>}\n */ \nconst ensureAsync = (deps, chunk) => new Promise(res => require.ensure(deps, res, chunk));\n\n/**\n * local vars for read-only class members\n * \n * @access private\n */\nlet loader,\n    logger,\n    playerController,\n    GraphicsLibrary,\n    resourceProvider,\n    canvasElement,\n    babylonEngine,\n    terrainEntity,\n    instance = null;\n\n/**\n * The game engine class (abstraction of BabylonJS Engine).\n *\n * @example <caption>Basic construction with default args</caption>\n * let engine = Engine.init(logger, () => Promise.resolve(resourceProvider));\n * @example <caption>One-line runner</caption>\n * Engine.init(myLogger, myResourceLazyLoader, MyPlayerCtrl, settings)\n *     .mount(document.getElementById('my-canvas'))\n *     .then(engine => engine.run(entityData))\n *     .then(engine => window.addEventListener('resize', () => engine.resize()));\n */\nexport default class Engine {\n\n    /**\n     * The singleton Engine instance.\n     * \n     * @type {?Engine}\n     */\n    static get instance() { return instance; }\n\n    /**\n     * Destroys singleton instance of class. (Hack until Singleton has own destroy method).\n     */\n    static destroy() {\n        instance = null;\n    }\n\n    /**\n     * The general creation/initialization method for the class. Creates an\n     * engine instance or returns the existing one if already instantiated.\n     *\n     * @param {Logger} loggerService\n     * @param {ResourceLoader} resourceProviderLoader\n     * @param {class} [PlayerController]\n     * @param {Settings} [settings={}]\n     * @return {Engine}\n     */\n    static init(\n        loggerService,\n        resourceProviderLoader,\n        PlayerController,\n        settings={}\n    ) {\n        let engine = instance;\n\n        if (engine) return engine;\n        loader = logger = playerController = GraphicsLibrary = terrainEntity =\n            resourceProvider = canvasElement = babylonEngine = null;\n        engine = new this(loggerService, PlayerController, settings);\n        engine.loading = LoadStates.RES;\n        loader = resourceProviderLoader().then(provider => {\n            resourceProvider = provider;\n            engine.loading = LoadStates.INIT;\n            engine.scene = Scene.create();\n        });\n        return engine;\n    }\n\n    /**\n     * For testing purposes -- cannot stub constructor\n     *\n     * @access private\n     */\n    static constructorHelper(engine, ...args) {\n        engine.constructorHelper(...args);\n    }\n\n    /**\n     * For testing purposes -- cannot stub constructor\n     *\n     * @access private\n     */\n    constructorHelper(loggerService, PlayerCtrlClass, settings) {\n        StateEventProxy.create(this, 'engine', ['fps', 'loading']);\n        /**\n         * The currently rendered frames-per-second.\n         *\n         * @type {ProxyValue}\n         */\n        this.fps = 0;\n        /**\n         * The current loading state of the engine.\n         *\n         * @type {ProxyValue}\n         */\n        this.loading = LoadStates.BOOT;\n        /** @type {?Scene} **/\n        this.scene = null\n        /** @type {boolean} **/\n        this.running = false;\n        /** @type {Settings} **/\n        this.settings = settings;\n        /** @type {?Interval} **/\n        this.statsInterval = null;\n        logger = loggerService;\n        playerController = PlayerController.create(this, PlayerCtrlClass);\n    }\n\n    /**\n     * @access private\n     */\n    constructor(...args) {\n        if (instance) throw new Error('Cannot instantiate more than one instance of Engine');\n        Engine.constructorHelper(this, ...args);\n        instance = this;\n    }\n\n    /**\n     * The BabylonJS graphics library.\n     *\n     * @type {?BabylonJS}\n     */\n    get GL() { return GraphicsLibrary; }\n    /**\n     * The BabylonJS.Engine instance.\n     *\n     * @type {?BabylonJS.Engine}\n     */\n    get baby() { return babylonEngine; }\n    /**\n     * The canvas element to which the engine has been mounted.\n     *\n     * @type {?DOMElement}\n     */\n    get canvas() { return canvasElement; }\n    /**\n     * @type {?ResourceProvider}\n     */\n    get provider() { return resourceProvider; }\n    /**\n     * @type {?PlayerController}\n     */\n    get ctrl() { return playerController; }\n    /**\n     * @type {Logger}\n     */\n    get logger() { return logger; }\n    /**\n     * The scene's default terrain entity.\n     *\n     * @type {?EntityInstance}\n     */\n    get terrain() { return terrainEntity; }\n    /**\n     * @type {EntityInstance}\n     */\n    set terrain(v) { return terrainEntity = v; }\n\n    /**\n     * Mount the engine to the given canvas.\n     *\n     * @access public\n     * @param {DOMElement} canvas\n     * @return {Promise<Engine>}\n     */\n    async mount(canvas) {\n        await loader;\n        logger.debug('Mounting engine to canvas...');\n        this.loading = LoadStates.GL;\n        await ensureAsync(['babylonjs'], 'graphics');\n        GraphicsLibrary = require('babylonjs');\n        this.loading = LoadStates.GAME;\n        babylonEngine = new GraphicsLibrary.Engine(canvas, true);\n        canvasElement = canvas;\n        logger.debug('Loading scene...');\n        await this.scene.mount(this);\n        this.loading = LoadStates.DATA;\n        logger.info('Engine mounted.');\n        return this;\n    }\n\n    /**\n     * Dismount engine from canvas.\n     *\n     * @access public\n     * @return {Promise<Engine>}\n     */\n    dismount() {\n        logger.debug('Dismounting from to canvas...');\n        if (this.running) {\n            this.stop();\n        }\n        this.scene = this.scene.dismount(this);\n        get(babylonEngine, 'dispose', noop)();\n        babylonEngine = null;\n        canvasElement = null;\n        logger.info('Engine dismounted.');\n        return Promise.resolve(this);\n    }\n\n    /**\n     * Initialize given entities (if any), then begin rendering to mounted canvas.\n     *\n     * @access public\n     * @param {EntityMetaData[]} [entities]\n     * @return {Promise<Engine>}\n     */\n    async run(entities) {\n        const step = 1000 / 60;\n        let count,\n            time,\n            accum = 0,\n            defer = Promise.resolve(this);\n\n        if (!this.running && this.loading === LoadStates.DATA) {\n            if (entities) {\n                this.loading = LoadStates.PROC;\n                logger.debug('Adding initial entities to scene...');\n                defer = this.scene.updateEntities(this, entities);\n            }\n            await defer;\n            this.ctrl.setup(this.settings);\n            forEach(\n                this.ctrl.DOM_EVENTS,\n                (fn, name) => canvasElement.addEventListener(\n                    name,\n                    e => e.preventDefault() && false || this.ctrl[fn](e)\n                )\n            );\n            this.loading = LoadStates.REND;\n            logger.debug('Starting engine render loop. ENGINE: ');\n            babylonEngine.runRenderLoop(() => {\n                count = 0;\n                time = Date.now();\n                accum = babylonEngine.getDeltaTime();\n                // accum += engine.baby.getDeltaTime();\n                // while (accum >= step) {\n                //     count++;\n                //     engine.scene.tick(engine, time, step);\n                //     accum -= step;\n                //     if (count > 5) accum = 0;\n                // }\n                this.scene.tick(this, time, accum);\n                this.scene.baby.render();\n            });\n            this.loading = LoadStates.DONE;\n            this.statsInterval = setInterval(() => {\n                this.fps = Math.floor(this.baby.fps)\n            }, this.settings.statsInterval || 1000);\n            this.running = true;\n            return this;\n        }\n        return this;\n    }\n\n    /**\n     * Stop the rendering loop.\n     *\n     * @access public\n     * @return {Engine}\n     */\n    stop() {\n        if (this.running) {\n            logger.debug('Stopping engine render loop.');\n            babylonEngine.stopRenderLoop();\n            this.running = false;\n            this.loading = LoadStates.DATA;\n            clearInterval(this.statsInterval);\n        }\n        return this;\n    }\n\n    /**\n     * Passthrough to BabylonJS.Engine#resize method.\n     *\n     * @access public\n     * @return {undefined}\n     */\n    resize() {\n        return get(babylonEngine, 'resize', noop)();\n    }\n\n    /**\n     * Creates a new BabylonJS.Vector3.\n     *\n     * @access public\n     * @param {Object} param\n     * @param {number} [param.x=0]\n     * @param {number} [param.y=0]\n     * @param {number} [param.z=0]\n     * @return {BabylonJS.Vector3}\n     */\n    toVector({x=0, y=0, z=0}={}) {\n        return new this.GL.Vector3(x, y, z);\n    }\n\n    /**\n     * Emits the given state event, only when settings.debug = true. See {@link Engine#emitEvent}.\n     *\n     * @access public\n     * @return {undefined}\n     */\n    emitDebugEvent(...args) {\n        return this.settings.debug ? this.emitEvent(...args) : false;\n    }\n\n    /**\n     * Adds state event listener only when settings.debug = true. See {@link Engine#onEvent}.\n     *\n     * @access public\n     * @return {undefined}\n     */\n    onDebugEvent(...args) {\n        return this.settings.debug ? this.onEvent(...args) : false;\n    }\n\n    /**\n     * Emits the given state event.\n     *\n     * @access public\n     * @param {string} scope - The scoped event name (e.g., 'engine.fps').\n     * @param {*} v - The changed value.\n     * @param {Object} obj - The parent object who's property changed.\n     * @return {undefined}\n     */\n    emitEvent(scope, v, obj) {\n        return stateEvents.emit(scope, v, obj);\n    }\n\n    /**\n     * Registers a listener method for a state event.\n     *\n     * @access public\n     * @param {string} event - The scoped event name.\n     * @param {function(value: *, obj: Object)} handler - The event handler.\n     * @return {undefined}\n     */\n    onEvent(event, handler) {\n        return stateEvents.on(event, handler);\n    }\n\n    /**\n     * Hooks a Keyboard Key action listener into the engine.\n     *\n     * @access public\n     * @param {string} key - The event key to listen for (e.g., 'w', 'a', 's', 'd', ' ', etc.).\n     * @param {Object} handlers\n     * @param {KeyHandler} [handlers.downHandler] - Handler method for KeyDown event.\n     * @param {KeyHandler} [handlers.upHandler] - Handler method for KeyUp event.\n     * @param {KeyHandler} [handlers.handler] - Handler method for both events.\n     * @return {undefined}\n     */\n    registerKeyAction(key, {downHandler, upHandler, handler}={}) {\n        const {ActionManager, ExecuteCodeAction} = this.GL;\n        const kUp = ActionManager.OnKeyUpTrigger;\n        const kDn = ActionManager.OnKeyDownTrigger;\n        let am = this.scene.baby.actionManager;\n\n        if (!am) {\n            am = this.scene.baby.actionManager = new ActionManager(this.scene.baby);\n        }\n        if (handler || downHandler) {\n            am.registerAction(new ExecuteCodeAction(\n                { trigger: kDn, parameter: key },\n                () => (handler || downHandler)(this, key, true))\n            );\n        }\n        if (handler || upHandler) {\n            am.registerAction(new ExecuteCodeAction(\n                { trigger: kUp, parameter: key },\n                () => (handler || upHandler)(this, key, false))\n            );\n        }\n    }\n\n    /**\n     * Hooks Mouse action listener(s) into the engine for a given Entity.\n     *\n     * @access public\n     * @param {Entity} entity\n     * @param {Object} opts\n     * @param {bool} [opts.click] - Hooks the left-click (or equivalent) when true.\n     * @param {bool} [opts.altClick] - Hooks the right-click (or equivalent) when true.\n     * @param {bool} [opts.over] - Hooks the mouse-over when true.\n     * @param {bool} [opts.out] - Hooks the mouse-out when true.\n     * @param {string} [opts.cursor] - Changes the mouse-over cursor when set.\n     * @return {undefined}\n     */\n    async registerMouseEventsForEntity(entity, { click, altClick, over, out, cursor }={}) {\n        const { ActionManager, ExecuteCodeAction } = this.GL;\n        const clickT = ActionManager.OnLeftPickTrigger;\n        const altClickT = ActionManager.OnRightPickTrigger;\n        const overT = ActionManager.OnPointerOverTrigger;\n        const outT = ActionManager.OnPointerOutTrigger;\n        const mesh = await entity.meshAsync;\n        const { baby } = await mesh.ready();\n        let am = baby.actionManager;\n\n        if (!am) {\n            am = baby.actionManager = new ActionManager(this.scene.baby);\n        }\n        if (cursor) {\n            am.hoverCursor = cursor;\n        }\n        if (click) {\n            am.registerAction(new ExecuteCodeAction(\n                clickT, e => this.ctrl.entityClick(entity, e))\n            );\n        }\n        if (altClick) {\n            am.registerAction(new ExecuteCodeAction(\n                altClickT, e => this.ctrl.entityAltClick(entity, e))\n            );\n        }\n        if (over) {\n            am.registerAction(new ExecuteCodeAction(\n                overT, e => this.ctrl.entityOver(entity, e))\n            );\n        }\n        if (out) {\n            am.registerAction(new ExecuteCodeAction(\n                outT, e => this.ctrl.entityOut(entity, e))\n            );\n        }\n    }\n\n    /**\n     * Removes all Mouse action listeners and mouse-over cursor for a given entity.\n     *\n     * @access public\n     * @return {undefined}\n     */\n    deregisterMouseEventsForEntity(entity) {\n        let am = entity.mesh.baby.actionManager;\n\n        if (am) {\n            am.hoverCursor = 'default';\n            while (am.actions.length) { am.actions.pop(); }\n        }\n    }\n}\n\n/**\n * The various states of Engine#loading.\n *\n * @access protected\n * @type {Object}\n * @property {string} BOOT\n * @property {string} RES\n * @property {string} INIT\n * @property {string} GL\n * @property {string} GAME\n * @property {string} DATA\n * @property {string} PROC\n * @property {string} REND\n * @property {null} DONE\n */\nexport const LoadStates = {\n    BOOT: 'Booting Up',\n    RES: 'Loading Resources',\n    INIT: 'Initial Setup',\n    GL: 'Loading Graphics Libraries',\n    GAME: 'Loading Game Engine',\n    DATA: 'Waiting For Initial Data',\n    PROC: 'Processing Initial Data',\n    REND: 'Rendering To Canvas',\n    DONE: null\n};\n\n/**\n * Exports private members for unit tests.\n * \n * @access private\n */\nexport const getPrivateDataForTest = () => ({\n    loader,\n    logger,\n    playerController,\n    GraphicsLibrary,\n    resourceProvider,\n    canvasElement,\n    babylonEngine,\n    terrainEntity\n});\n",
    "static": true,
    "longname": "/Users/zimmed/Bavel/bavel/src/Engine.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 63,
    "kind": "function",
    "name": "ensureAsync",
    "memberof": "src/Engine.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Engine.js~ensureAsync",
    "access": "public",
    "export": false,
    "importPath": "bavel/src/Engine.js",
    "importStyle": null,
    "description": "Promisified require.ensure.",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<undefined>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "deps",
        "description": "Dependencies to ensure."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "chunk",
        "description": "Optional chunk name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<undefined>"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 64,
    "kind": "class",
    "name": "Engine",
    "memberof": "src/Engine.js",
    "static": true,
    "longname": "src/Engine.js~Engine",
    "access": "public",
    "export": true,
    "importPath": "bavel/src/Engine.js",
    "importStyle": "Engine",
    "description": "The game engine class (abstraction of BabylonJS Engine).",
    "examples": [
      "<caption>Basic construction with default args</caption>\nlet engine = Engine.init(logger, () => Promise.resolve(resourceProvider));",
      "<caption>One-line runner</caption>\nEngine.init(myLogger, myResourceLazyLoader, MyPlayerCtrl, settings)\n    .mount(document.getElementById('my-canvas'))\n    .then(engine => engine.run(entityData))\n    .then(engine => window.addEventListener('resize', () => engine.resize()));"
    ],
    "lineNumber": 50,
    "interface": false
  },
  {
    "__docId__": 65,
    "kind": "get",
    "name": "instance",
    "memberof": "src/Engine.js~Engine",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Engine.js~Engine.instance",
    "access": "public",
    "description": "The singleton Engine instance.",
    "lineNumber": 57,
    "type": {
      "nullable": true,
      "types": [
        "Engine"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "destroy",
    "memberof": "src/Engine.js~Engine",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Engine.js~Engine.destroy",
    "access": "public",
    "description": "Destroys singleton instance of class. (Hack until Singleton has own destroy method).",
    "lineNumber": 62,
    "params": [],
    "return": null
  },
  {
    "__docId__": 67,
    "kind": "method",
    "name": "init",
    "memberof": "src/Engine.js~Engine",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Engine.js~Engine.init",
    "access": "public",
    "description": "The general creation/initialization method for the class. Creates an\nengine instance or returns the existing one if already instantiated.",
    "lineNumber": 76,
    "params": [
      {
        "nullable": null,
        "types": [
          "Logger"
        ],
        "spread": false,
        "optional": false,
        "name": "loggerService",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "ResourceLoader"
        ],
        "spread": false,
        "optional": false,
        "name": "resourceProviderLoader",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "class"
        ],
        "spread": false,
        "optional": true,
        "name": "PlayerController",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Settings"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "settings",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Engine"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 68,
    "kind": "method",
    "name": "constructorHelper",
    "memberof": "src/Engine.js~Engine",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Engine.js~Engine.constructorHelper",
    "access": "private",
    "description": "For testing purposes -- cannot stub constructor",
    "lineNumber": 102,
    "params": [
      {
        "name": "engine",
        "types": [
          "*"
        ]
      },
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": null
  },
  {
    "__docId__": 69,
    "kind": "method",
    "name": "constructorHelper",
    "memberof": "src/Engine.js~Engine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Engine.js~Engine#constructorHelper",
    "access": "private",
    "description": "For testing purposes -- cannot stub constructor",
    "lineNumber": 111,
    "params": [
      {
        "name": "loggerService",
        "types": [
          "*"
        ]
      },
      {
        "name": "PlayerCtrlClass",
        "types": [
          "*"
        ]
      },
      {
        "name": "settings",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 70,
    "kind": "member",
    "name": "fps",
    "memberof": "src/Engine.js~Engine",
    "static": false,
    "longname": "src/Engine.js~Engine#fps",
    "access": "public",
    "description": "The currently rendered frames-per-second.",
    "lineNumber": 118,
    "type": {
      "nullable": null,
      "types": [
        "ProxyValue"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 71,
    "kind": "member",
    "name": "loading",
    "memberof": "src/Engine.js~Engine",
    "static": false,
    "longname": "src/Engine.js~Engine#loading",
    "access": "public",
    "description": "The current loading state of the engine.",
    "lineNumber": 124,
    "type": {
      "nullable": null,
      "types": [
        "ProxyValue"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 72,
    "kind": "member",
    "name": "scene",
    "memberof": "src/Engine.js~Engine",
    "static": false,
    "longname": "src/Engine.js~Engine#scene",
    "access": "public",
    "description": null,
    "lineNumber": 126,
    "type": {
      "nullable": true,
      "types": [
        "Scene"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 73,
    "kind": "member",
    "name": "running",
    "memberof": "src/Engine.js~Engine",
    "static": false,
    "longname": "src/Engine.js~Engine#running",
    "access": "public",
    "description": null,
    "lineNumber": 128,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 74,
    "kind": "member",
    "name": "settings",
    "memberof": "src/Engine.js~Engine",
    "static": false,
    "longname": "src/Engine.js~Engine#settings",
    "access": "public",
    "description": null,
    "lineNumber": 130,
    "type": {
      "nullable": null,
      "types": [
        "Settings"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 75,
    "kind": "member",
    "name": "statsInterval",
    "memberof": "src/Engine.js~Engine",
    "static": false,
    "longname": "src/Engine.js~Engine#statsInterval",
    "access": "public",
    "description": null,
    "lineNumber": 132,
    "type": {
      "nullable": true,
      "types": [
        "Interval"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 76,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Engine.js~Engine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Engine.js~Engine#constructor",
    "access": "private",
    "description": "",
    "lineNumber": 140
  },
  {
    "__docId__": 77,
    "kind": "get",
    "name": "GL",
    "memberof": "src/Engine.js~Engine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Engine.js~Engine#GL",
    "access": "public",
    "description": "The BabylonJS graphics library.",
    "lineNumber": 151,
    "type": {
      "nullable": true,
      "types": [
        "BabylonJS"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 78,
    "kind": "get",
    "name": "baby",
    "memberof": "src/Engine.js~Engine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Engine.js~Engine#baby",
    "access": "public",
    "description": "The BabylonJS.Engine instance.",
    "lineNumber": 157,
    "type": {
      "nullable": true,
      "types": [
        "BabylonJS.Engine"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 79,
    "kind": "get",
    "name": "canvas",
    "memberof": "src/Engine.js~Engine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Engine.js~Engine#canvas",
    "access": "public",
    "description": "The canvas element to which the engine has been mounted.",
    "lineNumber": 163,
    "type": {
      "nullable": true,
      "types": [
        "DOMElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 80,
    "kind": "get",
    "name": "provider",
    "memberof": "src/Engine.js~Engine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Engine.js~Engine#provider",
    "access": "public",
    "description": "",
    "lineNumber": 167,
    "type": {
      "nullable": true,
      "types": [
        "ResourceProvider"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 81,
    "kind": "get",
    "name": "ctrl",
    "memberof": "src/Engine.js~Engine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Engine.js~Engine#ctrl",
    "access": "public",
    "description": "",
    "lineNumber": 171,
    "type": {
      "nullable": true,
      "types": [
        "PlayerController"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 82,
    "kind": "get",
    "name": "logger",
    "memberof": "src/Engine.js~Engine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Engine.js~Engine#logger",
    "access": "public",
    "description": "",
    "lineNumber": 175,
    "type": {
      "nullable": null,
      "types": [
        "Logger"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 83,
    "kind": "get",
    "name": "terrain",
    "memberof": "src/Engine.js~Engine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Engine.js~Engine#terrain",
    "access": "public",
    "description": "The scene's default terrain entity.",
    "lineNumber": 181,
    "type": {
      "nullable": true,
      "types": [
        "EntityInstance"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 84,
    "kind": "set",
    "name": "terrain",
    "memberof": "src/Engine.js~Engine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Engine.js~Engine#terrain",
    "access": "public",
    "description": "",
    "lineNumber": 185,
    "type": {
      "nullable": null,
      "types": [
        "EntityInstance"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 85,
    "kind": "method",
    "name": "mount",
    "memberof": "src/Engine.js~Engine",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/Engine.js~Engine#mount",
    "access": "public",
    "description": "Mount the engine to the given canvas.",
    "lineNumber": 194,
    "params": [
      {
        "nullable": null,
        "types": [
          "DOMElement"
        ],
        "spread": false,
        "optional": false,
        "name": "canvas",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Engine>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 89,
    "kind": "method",
    "name": "dismount",
    "memberof": "src/Engine.js~Engine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Engine.js~Engine#dismount",
    "access": "public",
    "description": "Dismount engine from canvas.",
    "lineNumber": 216,
    "return": {
      "nullable": null,
      "types": [
        "Promise<Engine>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 91,
    "kind": "method",
    "name": "run",
    "memberof": "src/Engine.js~Engine",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/Engine.js~Engine#run",
    "access": "public",
    "description": "Initialize given entities (if any), then begin rendering to mounted canvas.",
    "lineNumber": 236,
    "params": [
      {
        "nullable": null,
        "types": [
          "EntityMetaData[]"
        ],
        "spread": false,
        "optional": true,
        "name": "entities",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Engine>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 98,
    "kind": "method",
    "name": "stop",
    "memberof": "src/Engine.js~Engine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Engine.js~Engine#stop",
    "access": "public",
    "description": "Stop the rendering loop.",
    "lineNumber": 290,
    "return": {
      "nullable": null,
      "types": [
        "Engine"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 101,
    "kind": "method",
    "name": "resize",
    "memberof": "src/Engine.js~Engine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Engine.js~Engine#resize",
    "access": "public",
    "description": "Passthrough to BabylonJS.Engine#resize method.",
    "lineNumber": 307,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 102,
    "kind": "method",
    "name": "toVector",
    "memberof": "src/Engine.js~Engine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Engine.js~Engine#toVector",
    "access": "public",
    "description": "Creates a new BabylonJS.Vector3.",
    "lineNumber": 321,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "param",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "param.x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "param.y",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "param.z",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BabylonJS.Vector3"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 103,
    "kind": "method",
    "name": "emitDebugEvent",
    "memberof": "src/Engine.js~Engine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Engine.js~Engine#emitDebugEvent",
    "access": "public",
    "description": "Emits the given state event, only when settings.debug = true. See {@link Engine#emitEvent}.",
    "lineNumber": 331,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ]
  },
  {
    "__docId__": 104,
    "kind": "method",
    "name": "onDebugEvent",
    "memberof": "src/Engine.js~Engine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Engine.js~Engine#onDebugEvent",
    "access": "public",
    "description": "Adds state event listener only when settings.debug = true. See {@link Engine#onEvent}.",
    "lineNumber": 341,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ]
  },
  {
    "__docId__": 105,
    "kind": "method",
    "name": "emitEvent",
    "memberof": "src/Engine.js~Engine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Engine.js~Engine#emitEvent",
    "access": "public",
    "description": "Emits the given state event.",
    "lineNumber": 354,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "scope",
        "description": "The scoped event name (e.g., 'engine.fps')."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": "The changed value."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "The parent object who's property changed."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 106,
    "kind": "method",
    "name": "onEvent",
    "memberof": "src/Engine.js~Engine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Engine.js~Engine#onEvent",
    "access": "public",
    "description": "Registers a listener method for a state event.",
    "lineNumber": 366,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "The scoped event name."
      },
      {
        "nullable": null,
        "types": [
          "function(value: *, obj: Object)"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": "The event handler."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 107,
    "kind": "method",
    "name": "registerKeyAction",
    "memberof": "src/Engine.js~Engine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Engine.js~Engine#registerKeyAction",
    "access": "public",
    "description": "Hooks a Keyboard Key action listener into the engine.",
    "lineNumber": 381,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "The event key to listen for (e.g., 'w', 'a', 's', 'd', ' ', etc.)."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "handlers",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "KeyHandler"
        ],
        "spread": false,
        "optional": true,
        "name": "handlers.downHandler",
        "description": "Handler method for KeyDown event."
      },
      {
        "nullable": null,
        "types": [
          "KeyHandler"
        ],
        "spread": false,
        "optional": true,
        "name": "handlers.upHandler",
        "description": "Handler method for KeyUp event."
      },
      {
        "nullable": null,
        "types": [
          "KeyHandler"
        ],
        "spread": false,
        "optional": true,
        "name": "handlers.handler",
        "description": "Handler method for both events."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 108,
    "kind": "method",
    "name": "registerMouseEventsForEntity",
    "memberof": "src/Engine.js~Engine",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/Engine.js~Engine#registerMouseEventsForEntity",
    "access": "public",
    "description": "Hooks Mouse action listener(s) into the engine for a given Entity.",
    "lineNumber": 417,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "bool"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.click",
        "description": "Hooks the left-click (or equivalent) when true."
      },
      {
        "nullable": null,
        "types": [
          "bool"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.altClick",
        "description": "Hooks the right-click (or equivalent) when true."
      },
      {
        "nullable": null,
        "types": [
          "bool"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.over",
        "description": "Hooks the mouse-over when true."
      },
      {
        "nullable": null,
        "types": [
          "bool"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.out",
        "description": "Hooks the mouse-out when true."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.cursor",
        "description": "Changes the mouse-over cursor when set."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 109,
    "kind": "method",
    "name": "deregisterMouseEventsForEntity",
    "memberof": "src/Engine.js~Engine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Engine.js~Engine#deregisterMouseEventsForEntity",
    "access": "public",
    "description": "Removes all Mouse action listeners and mouse-over cursor for a given entity.",
    "lineNumber": 461,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "entity",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 110,
    "kind": "variable",
    "name": "LoadStates",
    "memberof": "src/Engine.js",
    "static": true,
    "longname": "src/Engine.js~LoadStates",
    "access": "protected",
    "export": true,
    "importPath": "bavel/src/Engine.js",
    "importStyle": "{LoadStates}",
    "description": "The various states of Engine#loading.",
    "lineNumber": 486,
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "BOOT",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "RES",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "INIT",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "GL",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "GAME",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "DATA",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "PROC",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "REND",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "null"
        ],
        "spread": false,
        "optional": false,
        "name": "DONE",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 111,
    "kind": "function",
    "name": "getPrivateDataForTest",
    "memberof": "src/Engine.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Engine.js~getPrivateDataForTest",
    "access": "private",
    "export": true,
    "importPath": "bavel/src/Engine.js",
    "importStyle": "{getPrivateDataForTest}",
    "description": "Exports private members for unit tests.",
    "lineNumber": 503,
    "params": [],
    "return": null
  },
  {
    "__docId__": 112,
    "kind": "file",
    "name": "src/Entity.js",
    "content": "import merge from 'lodash.merge';\nimport omit from 'lodash.omit';\nimport get from 'lodash.get';\nimport forEach from 'lodash.foreach';\n\n/**\n * List of entity keys that are not components.\n * \n * @access private\n * @type {Array<string>}\n */ \nconst nonCompKeys = ['id', 'uid', 'tick', 'mesh', '_primaryMesh'];\n/**\n * Time in MS to tick a check when waiting for entity's primary mesh to resolve.\n * \n * @access private\n * @type {number}\n */\nconst asyncStep = 50;\n/**\n * Time in MS to wait before the primary mesh resolution times out.\n * \n * @access private\n * @type {number}\n */\nconst asyncTimeout = 2000;\n\n/**\n * The Entity class\n */\nexport default class Entity {\n\n    /**\n     * Un-used constructor. Throws an error if instantiation is attempted.\n     * \n     * @access private\n     * @throws {Error}\n     */\n    constructor() {\n        throw new Error('Cannot instantiate static class Entity');\n    }\n\n    /**\n     * Uses the provided metadata and the engine's resourceProvider to create a\n     *  new entity.\n     *\n     * @param {Engine} engine\n     * @param {EntityMetaData} data\n     * @return {EntityInstance}\n     */\n    static create(engine, data) {\n        const ticks = {};\n        const { id, uid } = data;\n        const polyData = merge(engine.provider.getEntity(id), data);\n        const componentData = omit(polyData, nonCompKeys);\n        const entity = Object.defineProperties({ id, uid }, {\n            mesh: { get: () => get(entity, polyData._primaryMesh) },\n            tick: {\n                get: () => (eng, t, dt) =>\n                    forEach(ticks, (v, k) => { v(eng, entity, entity[k], t, dt); }),\n                set: ({ id, tick }) => tick ? (ticks[id] = tick) : (delete ticks[id])\n            },\n            meshAsync: {\n                get: () => new Promise((res, rej) => {\n                    const t = Date.now();\n                    const stop = setInterval(() => {\n                        if (entity.mesh) {\n                            clearInterval(stop);\n                            if (Object.getOwnPropertyDescriptor(entity, 'meshAsync').get) {\n                                Object.defineProperty(entity, 'meshAsync', {\n                                    value: Promise.resolve(entity.mesh),\n                                    configurable: false,\n                                    writable: false\n                                });\n                            }\n                            res(entity.mesh);\n                        } else if (Date.now() - t > asyncTimeout) {\n                            clearInterval(stop);\n                            rej(new Error('Timed out waiting for mesh of entity: ' + uid));\n                        }\n                    }, asyncStep);\n                }),\n                configurable: true\n            }\n        });\n\n        return this.updateComponents(engine, entity, componentData);\n    }\n\n    /**\n     * Updates/creates the component for the specified id.\n     *\n     * @param {Engine} engine\n     * @param {EntityInstance} entity\n     * @param {string} id - The component ID\n     * @param {ComponentData} data - The data with which to initialize/update the component.\n     * @return {Promise<Component>}\n     */\n    static async updateComponent(engine, entity, id, data) {\n        return entity[id] = await engine.provider.getComponent(id)\n            .update(engine, entity, entity[id], id, data);\n    }\n\n    /**\n     * Update/create all the components in the provided list of component data.\n     *\n     * @param {Engine} engine\n     * @param {EntityInstance} entity\n     * @param {ComponentData[]} componentData\n     * @return {Promise<EntityInstance>}\n     */\n    static async updateComponents(engine, entity, componentData) {\n        await Object.entries(componentData).reduce(\n            (promise, [ k, v ]) => promise.then(() => this.updateComponent(engine, entity, k, v)),\n            Promise.resolve()\n        );\n        return entity;\n    }\n\n    /**\n     * Dismount the specified component.\n     *\n     * @param {Engine} engine\n     * @param {EntityInstance} entity\n     * @param {string} id - The component ID.\n     * @return {null}\n     */\n    static dismountComponent(engine, entity, id) {\n        return entity[id] = engine.provider\n            .getComponent(id)\n            .dismount(engine, entity, entity[id]);\n    }\n\n    /**\n     * Update the entity or create if it doesn't exist.\n     *\n     * @param {Engine} engine\n     * @param {?EntityInstance} entity\n     * @param {EntityMetaData} data\n     * @return {Promise<EntityInstance>}\n     */\n    static update(engine, entity, data) {\n        if (!entity) {\n            return this.create(engine, data);\n        }\n        return this.updateComponents(engine, entity, omit(data, nonCompKeys));\n    }\n\n    /**\n     * Dismount the entity and all of its components.\n     *\n     * @param {Engine} engine\n     * @param {EntityInstance} entity\n     * @return {null}\n     */\n    static dismount(engine, entity) {\n        forEach(\n            omit(entity, nonCompKeys),\n            (v, k) => { this.dismountComponent(engine, entity, k); }\n        );\n        return null;\n    }\n\n    /**\n     * Execute the tick method for the provided EntityInstance.\n     *\n     * @param {Engine} engine\n     * @param {EntityInstance} entity\n     * @param {number} t\n     * @param {number} dt\n     */\n    static tick(engine, entity, t, dt) {\n        entity.tick(engine, t, dt);\n    }\n}\n",
    "static": true,
    "longname": "/Users/zimmed/Bavel/bavel/src/Entity.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 113,
    "kind": "variable",
    "name": "nonCompKeys",
    "memberof": "src/Entity.js",
    "static": true,
    "longname": "src/Entity.js~nonCompKeys",
    "access": "private",
    "export": false,
    "importPath": "bavel/src/Entity.js",
    "importStyle": null,
    "description": "List of entity keys that are not components.",
    "lineNumber": 12,
    "type": {
      "nullable": null,
      "types": [
        "Array<string>"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 114,
    "kind": "variable",
    "name": "asyncStep",
    "memberof": "src/Entity.js",
    "static": true,
    "longname": "src/Entity.js~asyncStep",
    "access": "private",
    "export": false,
    "importPath": "bavel/src/Entity.js",
    "importStyle": null,
    "description": "Time in MS to tick a check when waiting for entity's primary mesh to resolve.",
    "lineNumber": 19,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 115,
    "kind": "variable",
    "name": "asyncTimeout",
    "memberof": "src/Entity.js",
    "static": true,
    "longname": "src/Entity.js~asyncTimeout",
    "access": "private",
    "export": false,
    "importPath": "bavel/src/Entity.js",
    "importStyle": null,
    "description": "Time in MS to wait before the primary mesh resolution times out.",
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 116,
    "kind": "class",
    "name": "Entity",
    "memberof": "src/Entity.js",
    "static": true,
    "longname": "src/Entity.js~Entity",
    "access": "public",
    "export": true,
    "importPath": "bavel/src/Entity.js",
    "importStyle": "Entity",
    "description": "The Entity class",
    "lineNumber": 31,
    "interface": false
  },
  {
    "__docId__": 117,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Entity.js~Entity#constructor",
    "access": "private",
    "description": "Un-used constructor. Throws an error if instantiation is attempted.",
    "lineNumber": 39,
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": ""
      }
    ]
  },
  {
    "__docId__": 118,
    "kind": "method",
    "name": "create",
    "memberof": "src/Entity.js~Entity",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Entity.js~Entity.create",
    "access": "public",
    "description": "Uses the provided metadata and the engine's resourceProvider to create a\n new entity.",
    "lineNumber": 51,
    "params": [
      {
        "nullable": null,
        "types": [
          "Engine"
        ],
        "spread": false,
        "optional": false,
        "name": "engine",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "EntityMetaData"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "EntityInstance"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 119,
    "kind": "method",
    "name": "updateComponent",
    "memberof": "src/Entity.js~Entity",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/Entity.js~Entity.updateComponent",
    "access": "public",
    "description": "Updates/creates the component for the specified id.",
    "lineNumber": 99,
    "params": [
      {
        "nullable": null,
        "types": [
          "Engine"
        ],
        "spread": false,
        "optional": false,
        "name": "engine",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "EntityInstance"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The component ID"
      },
      {
        "nullable": null,
        "types": [
          "ComponentData"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The data with which to initialize/update the component."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Component>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 120,
    "kind": "method",
    "name": "updateComponents",
    "memberof": "src/Entity.js~Entity",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/Entity.js~Entity.updateComponents",
    "access": "public",
    "description": "Update/create all the components in the provided list of component data.",
    "lineNumber": 112,
    "params": [
      {
        "nullable": null,
        "types": [
          "Engine"
        ],
        "spread": false,
        "optional": false,
        "name": "engine",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "EntityInstance"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "ComponentData[]"
        ],
        "spread": false,
        "optional": false,
        "name": "componentData",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<EntityInstance>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 121,
    "kind": "method",
    "name": "dismountComponent",
    "memberof": "src/Entity.js~Entity",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Entity.js~Entity.dismountComponent",
    "access": "public",
    "description": "Dismount the specified component.",
    "lineNumber": 128,
    "params": [
      {
        "nullable": null,
        "types": [
          "Engine"
        ],
        "spread": false,
        "optional": false,
        "name": "engine",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "EntityInstance"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The component ID."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 122,
    "kind": "method",
    "name": "update",
    "memberof": "src/Entity.js~Entity",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Entity.js~Entity.update",
    "access": "public",
    "description": "Update the entity or create if it doesn't exist.",
    "lineNumber": 142,
    "params": [
      {
        "nullable": null,
        "types": [
          "Engine"
        ],
        "spread": false,
        "optional": false,
        "name": "engine",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "EntityInstance"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "EntityMetaData"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<EntityInstance>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 123,
    "kind": "method",
    "name": "dismount",
    "memberof": "src/Entity.js~Entity",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Entity.js~Entity.dismount",
    "access": "public",
    "description": "Dismount the entity and all of its components.",
    "lineNumber": 156,
    "params": [
      {
        "nullable": null,
        "types": [
          "Engine"
        ],
        "spread": false,
        "optional": false,
        "name": "engine",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "EntityInstance"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 124,
    "kind": "method",
    "name": "tick",
    "memberof": "src/Entity.js~Entity",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Entity.js~Entity.tick",
    "access": "public",
    "description": "Execute the tick method for the provided EntityInstance.",
    "lineNumber": 172,
    "params": [
      {
        "nullable": null,
        "types": [
          "Engine"
        ],
        "spread": false,
        "optional": false,
        "name": "engine",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "EntityInstance"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "t",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "dt",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 125,
    "kind": "file",
    "name": "src/PlayerController.js",
    "content": "import moment from 'moment';\nimport get from 'lodash.get';\nimport take from 'lodash.take';\nimport isNumber from 'lodash.isnumber';\nimport StateEventProxy from 'src/StateEventProxy';\n\n/**\n * @typedef {Object} Message\n * @property {string} time\n * @property {string} type\n * @property {?string} sender\n * @property {string} message\n */\n\nlet _engine, instance = null;\n\n/**\n * Controller for player logic and interactions.\n *\n * @property {number} MAX_MESSAGES - The maximum number of messages to keep in the array.\n * @example <caption>Definition</caption>\n * class MyGamePlayerController extends PlayerController {\n *     get DOM_EVENTS() {\n *         return {contextmenu: 'mAltClick', click: 'myClickMethod'};\n *     }\n *     entityOver(entity, event) {\n *         super.entityOver(entity, event);\n *         entity.MyActionableComponent.doAction();\n *     }\n *     entityClick(entity, {pointerX, pointerY}) {\n *         let {x, y, z} = this.engine.scene.baby.pick(pointerX, pointerY).pickedPoint;\n *\n *         this.player.MyOtherActionableComponent.beginMovementTo(x, y, z);\n *     }\n *     myClickMethod(event) {\n *         this.player.DestructionComponent.killAllHumans();\n *     }\n * }\n * @example <caption>Implementation</caption>\n * let engine = Engine.init(myLogger, myResourceLoader, MyGamePlayerController, {});\n */\nexport default class PlayerController {\n\n    /**\n     * Destroys singleton instance of class. (Hack until Singleton has own destroy method).\n     */\n    static destroy() {\n        instance = null;\n    }\n\n    /**\n     * Helper method for instantiating a new PlayerController.\n     * \n     * @param {Engine} engine - Game Engine instance.\n     * @param {?PlayerController} [Ctrl=PlayerController] - Optional controller subclass to instantiate.\n     * @returns {PlayerController}\n     */\n    static create(engine, Ctrl=this) {\n        return (instance) ? instance : new Ctrl(engine);\n    }\n\n    /**\n     * Used for generating readable-timestamps in messages.\n     *\n     * @param {Date|number|string} [date] - The date to stamp (current time is used if none provided).\n     * @param {string} [format='HH:mm:ss'] - The output format string.\n     * @return {string} - Current time in the specified / HH:mm:ss format.\n     */\n    static getTime(date, format='HH:mm:ss') {\n        return moment(date).format(format);\n    }\n\n    /**\n     * Map of HTML DOM events to controller functions to be hooked into the window\n     * when engine is mounted.\n     *\n     * @type {Object}\n     * @example <caption>Override DOM_EVENTS</caption>\n     * get DOM_EVENTS() { return {click: 'mClick'}; }\n     * // Only the browser click action will trigger a Controller method.\n     */\n    get DOM_EVENTS() {\n        return {\n            click: 'mClick',\n            contextmenu: 'mAltClick',\n            wheel: 'mWheel',\n            mouseover: 'mOver',\n            mouseout: 'mOut'\n        };\n    }\n\n    /**\n     * @param {Engine} engine - The reference to the parent game engine.\n     */\n    constructor(engine) {\n        if (instance) throw new Error('Cannot instantiate more than one instance of PlayerController');\n        StateEventProxy.create(this, `engine.ctrl`, ['messages', 'player', 'target']);\n        /**\n         * The list of logged game messages. New messages are inserted into the\n         * beginning of the array.\n         *\n         * @type {Message[]}\n         */\n        this.messages = [];\n        /**\n         * The controlled player entity.\n         *\n         * @type {?EntityInstance}\n         */\n        this.player = null;\n        /**\n         * The currently-targeted entity (based on mouse-over).\n         *\n         * @type {?EntityInstance}\n         */\n        this.target = null;\n        _engine = engine;\n        instance = this;\n    }\n\n    /**\n     * Reference to the parent game engine instance.\n     *\n     * @type {Engine}\n     */\n    get engine() { return _engine; }\n\n    /**\n     * Supplies the key listeners defined in the provided game settings to\n     *  {@link PlayerController#registerKeyActions}.\n     *\n     * @param {Settings} settings\n     */\n    setup(settings) {\n        this.registerKeyActions(get(settings, 'input.keys', []));\n    }\n\n    /**\n     * Hooks the provided key handlers into the game's keystroke actions.\n     *\n     * @param {KeyDefinition[]} keyHandlers\n     */\n    registerKeyActions(keyHandlers) {\n        keyHandlers.forEach((desc) => {\n            this.engine.registerKeyAction(desc.key, desc);\n        });\n    }\n\n    /**\n     * Inserts new message into controller's messages array.\n     *\n     * @param {string} type\n     * @param {?string} sender\n     * @param {string} message\n     * @param {number} [max=PlayerController.MAX_MESSAGES]\n     * @return {Message[]} - The updated messages array.\n     */\n    message(type, sender, message, max=this.constructor.MAX_MESSAGES) {\n        return this.messages = take(\n            [{ time: this.constructor.getTime(), type, sender, message }].concat(this.messages),\n            max\n        );\n    }\n\n    /**\n     * The event handler for a mouse cursor-over event on a game entity.\n     *\n     * @param {EntityInstance} entity\n     * @param {BabylonJS.ActionEvent} event\n     */\n    entityOver(entity, event) {\n        if (!entity || !event) {\n            throw new Error('Improper arguments passed to entityOver');\n        }\n        this.target = entity;\n    }\n\n    /**\n     * The event handler for a mouse cursor-out event on a game entity.\n     *\n     * @param {EntityInstance} entity\n     * @param {BabylonJS.ActionEvent} event\n     */\n    entityOut(entity, event) {\n        if (!entity || !event) {\n            throw new Error('Improper arguments passed to entityOut');\n        }\n        if (!this.target || this.target.uid === entity.uid) {\n            this.target = null;\n        }\n    }\n\n    /**\n     * Example event handler for a mouse left-click event on a game entity.\n     *\n     * @abstract\n     * @param {EntityInstance} entity\n     * @param {BabylonJS.ActionEvent} event\n     */\n    entityClick(entity, { pointerX, pointerY }) {\n        if (!entity || !isNumber(pointerX) || !isNumber(pointerY)) {\n            throw new Error('Improper arguments passed to entityClick');\n        }\n        const {x, y, z} = this.engine.scene.baby.pick(pointerX, pointerY).pickedPoint;\n\n        this.engine.logger.debug(`3D Click on ${entity.uid} at (${round(x)}, ${round(y)}, ${round(z)})`);\n    }\n\n    /**\n     * Example event handler for a mouse right-click event on a game entity.\n     *\n     * @abstract\n     * @param {EntityInstance} entity\n     * @param {BabylonJS.ActionEvent} event\n     */\n    entityAltClick(entity, { pointerX, pointerY }) {\n        if (!entity || !isNumber(pointerX) || !isNumber(pointerY)) {\n            throw new Error('Improper arguments passed to entityAltClick');\n        }\n        const {x, y, z} = this.engine.scene.baby.pick(pointerX, pointerY).pickedPoint;\n\n        this.engine.logger.debug(`3D Alt Click on ${entity.uid} at (${round(x)}, ${round(y)}, ${round(z)})`);\n    }\n\n    /**\n     * Example event handler for the browser's left mouse click.\n     *\n     * @abstract\n     * @param {SyntheticEvent} event\n     * @param {number} event.pageX - The X-position of the click relative to the\n     *  HTML document.\n     * @param {number} event.pageY - The Y-position of the click relative to the\n     *  HTML document.\n     */\n    mClick({ pageX, pageY }) {\n        if (!isNumber(pageX) || !isNumber(pageY)) {\n            throw new Error('Improper event passed to mClick');\n        }\n        this.engine.logger.debug(`Click at (${pageX}, ${pageY})`);\n    }\n\n    /**\n     * Example event handler for the browser's right mouse click.\n     *\n     * @abstract\n     * @param {SyntheticEvent} event\n     * @param {number} event.pageX - The X-position of the click relative to the\n     *  HTML document.\n     * @param {number} event.pageY - The Y-position of the click relative to the\n     *  HTML document.\n     */\n    mAltClick({ pageX, pageY }) {\n        if (!isNumber(pageX) || !isNumber(pageY)) {\n            throw new Error('Improper event passed to mAltClick');\n        }\n        this.engine.logger.debug(`Alt Click at (${pageX}, ${pageY})`);\n    }\n\n    /**\n     * Example event handler for the browser's mouse wheel event.\n     *\n     * @abstract\n     * @param {SyntheticEvent} event\n     * @param {number} event.deltaX - The value scrolled along the X axis.\n     * @param {number} event.deltaY - The value scrolled along the Y axis.\n     * @param {number} event.deltaZ - The value scrolled along the Z axis.\n     */\n    mWheel({ deltaX, deltaY, deltaZ }) {\n        if (!isNumber(deltaY) && !isNumber(deltaX) && !isNumber(deltaX)) {\n            throw new Error('Improper event passed to mWheel');\n        }\n        if (deltaY) {\n            this.engine.logger.debug(`MouseWheel scroll ${deltaY > 0 ? 'out' : 'in'} ${deltaY}`);\n        }\n    }\n\n    /**\n     * Example event handler for the browser's mouse over event.\n     *\n     * @abstract\n     * @param {SyntheticEvent} event\n     * @param {number} event.pageX - The X-position of the click relative to the\n     *  HTML document.\n     * @param {number} event.pageY - The Y-position of the click relative to the\n     *  HTML document.\n     */\n    mOver({ pageX, pageY }) {\n        if (!isNumber(pageX) || !isNumber(pageY)) {\n            throw new Error('Improper event passed to mAltClick');\n        }\n        this.engine.logger.debug('Pointer has entered canvas element.');\n    }\n\n    /**\n     * Example event handler for the browser's mouse out event.\n     *\n     * @abstract\n     * @param {SyntheticEvent} event\n     * @param {number} event.pageX - The X-position of the click relative to the\n     *  HTML document.\n     * @param {number} event.pageY - The Y-position of the click relative to the\n     *  HTML document.\n     */\n    mOut({ pageX, pageY }) {\n        if (!isNumber(pageX) || !isNumber(pageY)) {\n            throw new Error('Improper event passed to mAltClick');\n        }\n        this.engine.logger.debug('Pointer has left cavnas element.');\n    }\n}\n\n/** @type {number} **/\nPlayerController.MAX_MESSAGES = 100;\n\n/**\n * Simple decimal cut-off utility function that rounds a number to the nearest\n *  second decimal place.\n *\n * @param {number} x - The number to round.\n * @return {number} - The rounded number.\n * @example\n * console.assert(round(Math.PI) === 3.14);\n */\nexport const round = x => Math.round(x * 100) / 100;\n",
    "static": true,
    "longname": "/Users/zimmed/Bavel/bavel/src/PlayerController.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 126,
    "kind": "typedef",
    "name": "Message",
    "memberof": "src/PlayerController.js",
    "static": true,
    "longname": "src/PlayerController.js~Message",
    "access": "public",
    "description": "",
    "lineNumber": 15,
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "time",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "sender",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "Message"
    }
  },
  {
    "__docId__": 127,
    "kind": "class",
    "name": "PlayerController",
    "memberof": "src/PlayerController.js",
    "static": true,
    "longname": "src/PlayerController.js~PlayerController",
    "access": "public",
    "export": true,
    "importPath": "bavel/src/PlayerController.js",
    "importStyle": "PlayerController",
    "description": "Controller for player logic and interactions.",
    "examples": [
      "<caption>Definition</caption>\nclass MyGamePlayerController extends PlayerController {\n    get DOM_EVENTS() {\n        return {contextmenu: 'mAltClick', click: 'myClickMethod'};\n    }\n    entityOver(entity, event) {\n        super.entityOver(entity, event);\n        entity.MyActionableComponent.doAction();\n    }\n    entityClick(entity, {pointerX, pointerY}) {\n        let {x, y, z} = this.engine.scene.baby.pick(pointerX, pointerY).pickedPoint;\n\n        this.player.MyOtherActionableComponent.beginMovementTo(x, y, z);\n    }\n    myClickMethod(event) {\n        this.player.DestructionComponent.killAllHumans();\n    }\n}",
      "<caption>Implementation</caption>\nlet engine = Engine.init(myLogger, myResourceLoader, MyGamePlayerController, {});"
    ],
    "lineNumber": 42,
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "MAX_MESSAGES",
        "description": "The maximum number of messages to keep in the array."
      }
    ],
    "interface": false
  },
  {
    "__docId__": 128,
    "kind": "method",
    "name": "destroy",
    "memberof": "src/PlayerController.js~PlayerController",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/PlayerController.js~PlayerController.destroy",
    "access": "public",
    "description": "Destroys singleton instance of class. (Hack until Singleton has own destroy method).",
    "lineNumber": 47,
    "params": [],
    "return": null
  },
  {
    "__docId__": 129,
    "kind": "method",
    "name": "create",
    "memberof": "src/PlayerController.js~PlayerController",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/PlayerController.js~PlayerController.create",
    "access": "public",
    "description": "Helper method for instantiating a new PlayerController.",
    "lineNumber": 58,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{PlayerController}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Engine"
        ],
        "spread": false,
        "optional": false,
        "name": "engine",
        "description": "Game Engine instance."
      },
      {
        "nullable": true,
        "types": [
          "PlayerController"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "PlayerController",
        "defaultRaw": "PlayerController",
        "name": "Ctrl",
        "description": "Optional controller subclass to instantiate."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "PlayerController"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 130,
    "kind": "method",
    "name": "getTime",
    "memberof": "src/PlayerController.js~PlayerController",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/PlayerController.js~PlayerController.getTime",
    "access": "public",
    "description": "Used for generating readable-timestamps in messages.",
    "lineNumber": 69,
    "params": [
      {
        "nullable": null,
        "types": [
          "Date",
          "number",
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "date",
        "description": "The date to stamp (current time is used if none provided)."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'HH:mm:ss'",
        "defaultRaw": "'HH:mm:ss'",
        "name": "format",
        "description": "The output format string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "Current time in the specified / HH:mm:ss format."
    }
  },
  {
    "__docId__": 131,
    "kind": "get",
    "name": "DOM_EVENTS",
    "memberof": "src/PlayerController.js~PlayerController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PlayerController.js~PlayerController#DOM_EVENTS",
    "access": "public",
    "description": "Map of HTML DOM events to controller functions to be hooked into the window\nwhen engine is mounted.",
    "examples": [
      "<caption>Override DOM_EVENTS</caption>\nget DOM_EVENTS() { return {click: 'mClick'}; }\n// Only the browser click action will trigger a Controller method."
    ],
    "lineNumber": 82,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 132,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/PlayerController.js~PlayerController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PlayerController.js~PlayerController#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 95,
    "params": [
      {
        "nullable": null,
        "types": [
          "Engine"
        ],
        "spread": false,
        "optional": false,
        "name": "engine",
        "description": "The reference to the parent game engine."
      }
    ]
  },
  {
    "__docId__": 133,
    "kind": "member",
    "name": "messages",
    "memberof": "src/PlayerController.js~PlayerController",
    "static": false,
    "longname": "src/PlayerController.js~PlayerController#messages",
    "access": "public",
    "description": "The list of logged game messages. New messages are inserted into the\nbeginning of the array.",
    "lineNumber": 104,
    "type": {
      "nullable": null,
      "types": [
        "Message[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 134,
    "kind": "member",
    "name": "player",
    "memberof": "src/PlayerController.js~PlayerController",
    "static": false,
    "longname": "src/PlayerController.js~PlayerController#player",
    "access": "public",
    "description": "The controlled player entity.",
    "lineNumber": 110,
    "type": {
      "nullable": true,
      "types": [
        "EntityInstance"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 135,
    "kind": "member",
    "name": "target",
    "memberof": "src/PlayerController.js~PlayerController",
    "static": false,
    "longname": "src/PlayerController.js~PlayerController#target",
    "access": "public",
    "description": "The currently-targeted entity (based on mouse-over).",
    "lineNumber": 116,
    "type": {
      "nullable": true,
      "types": [
        "EntityInstance"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 136,
    "kind": "get",
    "name": "engine",
    "memberof": "src/PlayerController.js~PlayerController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PlayerController.js~PlayerController#engine",
    "access": "public",
    "description": "Reference to the parent game engine instance.",
    "lineNumber": 126,
    "type": {
      "nullable": null,
      "types": [
        "Engine"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 137,
    "kind": "method",
    "name": "setup",
    "memberof": "src/PlayerController.js~PlayerController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PlayerController.js~PlayerController#setup",
    "access": "public",
    "description": "Supplies the key listeners defined in the provided game settings to\n {@link PlayerController#registerKeyActions}.",
    "lineNumber": 134,
    "params": [
      {
        "nullable": null,
        "types": [
          "Settings"
        ],
        "spread": false,
        "optional": false,
        "name": "settings",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 138,
    "kind": "method",
    "name": "registerKeyActions",
    "memberof": "src/PlayerController.js~PlayerController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PlayerController.js~PlayerController#registerKeyActions",
    "access": "public",
    "description": "Hooks the provided key handlers into the game's keystroke actions.",
    "lineNumber": 143,
    "params": [
      {
        "nullable": null,
        "types": [
          "KeyDefinition[]"
        ],
        "spread": false,
        "optional": false,
        "name": "keyHandlers",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 139,
    "kind": "method",
    "name": "message",
    "memberof": "src/PlayerController.js~PlayerController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PlayerController.js~PlayerController#message",
    "access": "public",
    "description": "Inserts new message into controller's messages array.",
    "lineNumber": 158,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "sender",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "PlayerController.MAX_MESSAGES",
        "defaultRaw": "PlayerController.MAX_MESSAGES",
        "name": "max",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Message[]"
      ],
      "spread": false,
      "description": "The updated messages array."
    }
  },
  {
    "__docId__": 140,
    "kind": "method",
    "name": "entityOver",
    "memberof": "src/PlayerController.js~PlayerController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PlayerController.js~PlayerController#entityOver",
    "access": "public",
    "description": "The event handler for a mouse cursor-over event on a game entity.",
    "lineNumber": 171,
    "params": [
      {
        "nullable": null,
        "types": [
          "EntityInstance"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "BabylonJS.ActionEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 142,
    "kind": "method",
    "name": "entityOut",
    "memberof": "src/PlayerController.js~PlayerController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PlayerController.js~PlayerController#entityOut",
    "access": "public",
    "description": "The event handler for a mouse cursor-out event on a game entity.",
    "lineNumber": 184,
    "params": [
      {
        "nullable": null,
        "types": [
          "EntityInstance"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "BabylonJS.ActionEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 144,
    "kind": "method",
    "name": "entityClick",
    "memberof": "src/PlayerController.js~PlayerController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PlayerController.js~PlayerController#entityClick",
    "access": "public",
    "description": "Example event handler for a mouse left-click event on a game entity.",
    "lineNumber": 200,
    "params": [
      {
        "nullable": null,
        "types": [
          "EntityInstance"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "BabylonJS.ActionEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      }
    ],
    "abstract": true,
    "return": null
  },
  {
    "__docId__": 145,
    "kind": "method",
    "name": "entityAltClick",
    "memberof": "src/PlayerController.js~PlayerController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PlayerController.js~PlayerController#entityAltClick",
    "access": "public",
    "description": "Example event handler for a mouse right-click event on a game entity.",
    "lineNumber": 216,
    "params": [
      {
        "nullable": null,
        "types": [
          "EntityInstance"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "BabylonJS.ActionEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      }
    ],
    "abstract": true,
    "return": null
  },
  {
    "__docId__": 146,
    "kind": "method",
    "name": "mClick",
    "memberof": "src/PlayerController.js~PlayerController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PlayerController.js~PlayerController#mClick",
    "access": "public",
    "description": "Example event handler for the browser's left mouse click.",
    "lineNumber": 235,
    "params": [
      {
        "nullable": null,
        "types": [
          "SyntheticEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "event.pageX",
        "description": "The X-position of the click relative to the\n HTML document."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "event.pageY",
        "description": "The Y-position of the click relative to the\n HTML document."
      }
    ],
    "abstract": true,
    "return": null
  },
  {
    "__docId__": 147,
    "kind": "method",
    "name": "mAltClick",
    "memberof": "src/PlayerController.js~PlayerController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PlayerController.js~PlayerController#mAltClick",
    "access": "public",
    "description": "Example event handler for the browser's right mouse click.",
    "lineNumber": 252,
    "params": [
      {
        "nullable": null,
        "types": [
          "SyntheticEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "event.pageX",
        "description": "The X-position of the click relative to the\n HTML document."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "event.pageY",
        "description": "The Y-position of the click relative to the\n HTML document."
      }
    ],
    "abstract": true,
    "return": null
  },
  {
    "__docId__": 148,
    "kind": "method",
    "name": "mWheel",
    "memberof": "src/PlayerController.js~PlayerController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PlayerController.js~PlayerController#mWheel",
    "access": "public",
    "description": "Example event handler for the browser's mouse wheel event.",
    "lineNumber": 268,
    "params": [
      {
        "nullable": null,
        "types": [
          "SyntheticEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "event.deltaX",
        "description": "The value scrolled along the X axis."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "event.deltaY",
        "description": "The value scrolled along the Y axis."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "event.deltaZ",
        "description": "The value scrolled along the Z axis."
      }
    ],
    "abstract": true,
    "return": null
  },
  {
    "__docId__": 149,
    "kind": "method",
    "name": "mOver",
    "memberof": "src/PlayerController.js~PlayerController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PlayerController.js~PlayerController#mOver",
    "access": "public",
    "description": "Example event handler for the browser's mouse over event.",
    "lineNumber": 287,
    "params": [
      {
        "nullable": null,
        "types": [
          "SyntheticEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "event.pageX",
        "description": "The X-position of the click relative to the\n HTML document."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "event.pageY",
        "description": "The Y-position of the click relative to the\n HTML document."
      }
    ],
    "abstract": true,
    "return": null
  },
  {
    "__docId__": 150,
    "kind": "method",
    "name": "mOut",
    "memberof": "src/PlayerController.js~PlayerController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PlayerController.js~PlayerController#mOut",
    "access": "public",
    "description": "Example event handler for the browser's mouse out event.",
    "lineNumber": 304,
    "params": [
      {
        "nullable": null,
        "types": [
          "SyntheticEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "event.pageX",
        "description": "The X-position of the click relative to the\n HTML document."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "event.pageY",
        "description": "The Y-position of the click relative to the\n HTML document."
      }
    ],
    "abstract": true,
    "return": null
  },
  {
    "__docId__": 151,
    "kind": "function",
    "name": "round",
    "memberof": "src/PlayerController.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/PlayerController.js~round",
    "access": "public",
    "export": true,
    "importPath": "bavel/src/PlayerController.js",
    "importStyle": "{round}",
    "description": "Simple decimal cut-off utility function that rounds a number to the nearest\n second decimal place.",
    "examples": [
      "console.assert(round(Math.PI) === 3.14);"
    ],
    "lineNumber": 324,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "The number to round."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The rounded number."
    }
  },
  {
    "__docId__": 152,
    "kind": "file",
    "name": "src/Scene.js",
    "content": "import mapValues from 'lodash.mapvalues';\nimport pickBy from 'lodash.pickby';\nimport get from 'lodash.get';\nimport forEach from 'lodash.foreach';\nimport noop from 'lodash.noop';\nimport Entity from 'src/Entity';\n\n/**\n * local vars for read-only class members\n * \n * @access private\n */\nlet instance = null;\n\n/**\n * The Scene class\n */\nexport default class Scene {\n    /**\n     * Singleton instance of Scene\n     * \n     * @type {?Scene}\n     */\n    static get instance() { return instance; }\n\n    /**\n     * Destroys singleton instance of class. (Hack until Singleton has own destroy method).\n     */\n    static destroy() {\n        instance = null;\n    }\n\n    /**\n     * Helper method to create a new Scene instance, or return an existing one.\n     * \n     * @returns {Scene}\n     */\n    static create() {\n        return (instance) ? instance : new Scene();\n    }\n\n    /**\n     * Scene constructor.\n     */\n    constructor() {\n        if (instance) throw new Error('Cannot instantiate more than one instance of Scene');\n        /**\n         * The map of entities registered to the scene (keys are entity.uid).\n         *\n         * @type {Object}\n         */\n        this.children = {};\n        /**\n         * The active camera entity.\n         *\n         * @type {?EntityInstance}\n         */\n        this.activeCamera = null;\n        Object.defineProperty(this, '_baby', {\n            value: null,\n            writable: true\n        });\n        /**\n         * The underlying BabylonJS scene object.\n         * \n         * @type {?BabylonJS#Scene}\n         */\n        this._baby = null;\n        instance = this;\n    }\n\n    /**\n     * The BabylonJS.Scene instance.\n     *\n     * @type {?BabylonJS.Scene}\n     */\n    get baby() { return this._baby; }\n\n    /**\n     * Instantiates the {@link Scene#baby} object.\n     *\n     * @param {Engine} engine\n     */\n    mount(engine) {\n        this._baby = new engine.GL.Scene(engine.baby);\n    }\n\n    /**\n     * Dismounts all child entities and disposes {@link Scene#baby} property.\n     *\n     * @param {Engine} engine\n     * @return {null}\n     */\n    dismount(engine) {\n        this.children = pickBy(mapValues(this.children, e => Entity.dismount(engine, e)));\n        get(this, '_baby.dispose', noop)();\n        this._baby = null;\n        return null;\n    }\n\n    /**\n     * Gets child entity by EntityInstance#uid.\n     *\n     * @param {string} uid\n     * @return {EntityInstance} if entity is found.\n     * @return {undefined} if entity is not found.\n     */\n    getEntity(uid) {\n        return get(this.children, uid);\n    }\n\n    /**\n     * Updates/creates an entity with the provided data, and saves it to {@link Scene#children}.\n     *\n     * @param {Engine} engine\n     * @param {EntityMetaData} entityData\n     * @return {Promise<EntityInstance>} - The new/updated entity.\n     */\n    updateEntity(engine, entityData) {\n        return Entity.update(engine, this.children[entityData.uid], entityData)\n            .then(e => this.children[entityData.uid] = e);\n    }\n\n    /**\n     * Updates all entities in the provided list of entity data.\n     *\n     * @param {Engine} engine\n     * @param {EntityMetaData[]} entities\n     * @return {Promise<Scene>}\n     */\n    async updateEntities(engine, entities) {\n        await entities.reduce(\n            (promise, e) => promise.then(() => this.updateEntity(engine, e)),\n            Promise.resolve()\n        );\n        return this;\n    }\n\n    /**\n     * Dismounts and removes child entity by EntityInstance#uid.\n     *\n     * @param {Engine} engine\n     * @param {string} entityUid\n     * @return {null}\n     */\n    removeEntity(engine, entityUid) {\n        return this.children[entityUid] = Entity.dismount(engine, get(this.children, entityUid));\n    }\n\n    /**\n     * Executes registered tick methods for all child entities.\n     *\n     * @param {Engine} engine\n     * @param {number} t - The current timestamp in miliseconds.\n     * @param {number} dt - The elapsed miliseconds since the last tick.\n     */\n    tick(engine, t, dt) {\n        forEach(this.children, e => { Entity.tick(engine, e, t, dt) });\n    }\n}\n",
    "static": true,
    "longname": "/Users/zimmed/Bavel/bavel/src/Scene.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 153,
    "kind": "variable",
    "name": "instance",
    "memberof": "src/Scene.js",
    "static": true,
    "longname": "src/Scene.js~instance",
    "access": "private",
    "export": false,
    "importPath": "bavel/src/Scene.js",
    "importStyle": null,
    "description": "local vars for read-only class members",
    "lineNumber": 13,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 154,
    "kind": "class",
    "name": "Scene",
    "memberof": "src/Scene.js",
    "static": true,
    "longname": "src/Scene.js~Scene",
    "access": "public",
    "export": true,
    "importPath": "bavel/src/Scene.js",
    "importStyle": "Scene",
    "description": "The Scene class",
    "lineNumber": 18,
    "interface": false
  },
  {
    "__docId__": 155,
    "kind": "get",
    "name": "instance",
    "memberof": "src/Scene.js~Scene",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Scene.js~Scene.instance",
    "access": "public",
    "description": "Singleton instance of Scene",
    "lineNumber": 24,
    "type": {
      "nullable": true,
      "types": [
        "Scene"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 156,
    "kind": "method",
    "name": "destroy",
    "memberof": "src/Scene.js~Scene",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Scene.js~Scene.destroy",
    "access": "public",
    "description": "Destroys singleton instance of class. (Hack until Singleton has own destroy method).",
    "lineNumber": 29,
    "params": [],
    "return": null
  },
  {
    "__docId__": 157,
    "kind": "method",
    "name": "create",
    "memberof": "src/Scene.js~Scene",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Scene.js~Scene.create",
    "access": "public",
    "description": "Helper method to create a new Scene instance, or return an existing one.",
    "lineNumber": 38,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Scene}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Scene"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 158,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Scene.js~Scene",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Scene.js~Scene#constructor",
    "access": "public",
    "description": "Scene constructor.",
    "lineNumber": 45
  },
  {
    "__docId__": 159,
    "kind": "member",
    "name": "children",
    "memberof": "src/Scene.js~Scene",
    "static": false,
    "longname": "src/Scene.js~Scene#children",
    "access": "public",
    "description": "The map of entities registered to the scene (keys are entity.uid).",
    "lineNumber": 52,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 160,
    "kind": "member",
    "name": "activeCamera",
    "memberof": "src/Scene.js~Scene",
    "static": false,
    "longname": "src/Scene.js~Scene#activeCamera",
    "access": "public",
    "description": "The active camera entity.",
    "lineNumber": 58,
    "type": {
      "nullable": true,
      "types": [
        "EntityInstance"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 161,
    "kind": "member",
    "name": "_baby",
    "memberof": "src/Scene.js~Scene",
    "static": false,
    "longname": "src/Scene.js~Scene#_baby",
    "access": "private",
    "description": "The underlying BabylonJS scene object.",
    "lineNumber": 68,
    "type": {
      "nullable": true,
      "types": [
        "BabylonJS#Scene"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 162,
    "kind": "get",
    "name": "baby",
    "memberof": "src/Scene.js~Scene",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Scene.js~Scene#baby",
    "access": "public",
    "description": "The BabylonJS.Scene instance.",
    "lineNumber": 77,
    "type": {
      "nullable": true,
      "types": [
        "BabylonJS.Scene"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 163,
    "kind": "method",
    "name": "mount",
    "memberof": "src/Scene.js~Scene",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Scene.js~Scene#mount",
    "access": "public",
    "description": "Instantiates the {@link Scene#baby} object.",
    "lineNumber": 84,
    "params": [
      {
        "nullable": null,
        "types": [
          "Engine"
        ],
        "spread": false,
        "optional": false,
        "name": "engine",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 165,
    "kind": "method",
    "name": "dismount",
    "memberof": "src/Scene.js~Scene",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Scene.js~Scene#dismount",
    "access": "public",
    "description": "Dismounts all child entities and disposes {@link Scene#baby} property.",
    "lineNumber": 94,
    "params": [
      {
        "nullable": null,
        "types": [
          "Engine"
        ],
        "spread": false,
        "optional": false,
        "name": "engine",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 168,
    "kind": "method",
    "name": "getEntity",
    "memberof": "src/Scene.js~Scene",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Scene.js~Scene#getEntity",
    "access": "public",
    "description": "Gets child entity by EntityInstance#uid.",
    "lineNumber": 108,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "uid",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": "if entity is not found."
    }
  },
  {
    "__docId__": 169,
    "kind": "method",
    "name": "updateEntity",
    "memberof": "src/Scene.js~Scene",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Scene.js~Scene#updateEntity",
    "access": "public",
    "description": "Updates/creates an entity with the provided data, and saves it to {@link Scene#children}.",
    "lineNumber": 119,
    "params": [
      {
        "nullable": null,
        "types": [
          "Engine"
        ],
        "spread": false,
        "optional": false,
        "name": "engine",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "EntityMetaData"
        ],
        "spread": false,
        "optional": false,
        "name": "entityData",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<EntityInstance>"
      ],
      "spread": false,
      "description": "The new/updated entity."
    }
  },
  {
    "__docId__": 170,
    "kind": "method",
    "name": "updateEntities",
    "memberof": "src/Scene.js~Scene",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/Scene.js~Scene#updateEntities",
    "access": "public",
    "description": "Updates all entities in the provided list of entity data.",
    "lineNumber": 131,
    "params": [
      {
        "nullable": null,
        "types": [
          "Engine"
        ],
        "spread": false,
        "optional": false,
        "name": "engine",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "EntityMetaData[]"
        ],
        "spread": false,
        "optional": false,
        "name": "entities",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Scene>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 171,
    "kind": "method",
    "name": "removeEntity",
    "memberof": "src/Scene.js~Scene",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Scene.js~Scene#removeEntity",
    "access": "public",
    "description": "Dismounts and removes child entity by EntityInstance#uid.",
    "lineNumber": 146,
    "params": [
      {
        "nullable": null,
        "types": [
          "Engine"
        ],
        "spread": false,
        "optional": false,
        "name": "engine",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "entityUid",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 172,
    "kind": "method",
    "name": "tick",
    "memberof": "src/Scene.js~Scene",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Scene.js~Scene#tick",
    "access": "public",
    "description": "Executes registered tick methods for all child entities.",
    "lineNumber": 157,
    "params": [
      {
        "nullable": null,
        "types": [
          "Engine"
        ],
        "spread": false,
        "optional": false,
        "name": "engine",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "t",
        "description": "The current timestamp in miliseconds."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "dt",
        "description": "The elapsed miliseconds since the last tick."
      }
    ],
    "return": null
  },
  {
    "__docId__": 173,
    "kind": "file",
    "name": "src/StateEventProxy.js",
    "content": "import forEach from 'lodash.foreach';\nimport isObject from 'lodash.isobject';\nimport isPlainObject from 'lodash.isplainobject';\nimport isNumber from 'lodash.isnumber';\nimport stateEvents from 'src/stateEvents';\n\n/**\n * @typedef {function(scope: string, newValue: *, parentObject: Object): undefined} ScopedEventListener\n * @typedef {string} ScopedEvent - Handled by {@link ScopedEventListener}.\n */\n/**\n * @typedef {Object} ProxifiedObject\n * @emits {ScopedEvent} - emits event name scoped to property change for proxied\n *  properties.\n */\n\n/**\n * Exported disable map for testing purposes.\n * \n * @access private\n */\nexport const DISABLE = {};\n\n/**\n * The StateEventProxy class.\n * \n * @example <caption>Setup</caption>\n * const StateEventProxy = require('./StateEventProxy');\n * let myObject = {};\n * @example <caption>Property Keys</caption>\n * StateEventProxy.create(myObject, 'myObject', ['myPropA', 'myPropB']);\n * console.log(myObject) // {myPropA: undefined, myPropB: undeinfed}\n * myObject.myPropA = 10; // Emits event w/ args: 'myObject.myPropA', 10, myObject\n * myObject.myPropB = {}; // Emits event w/ args: 'myObject.myPropB', {}, myObject\n * console.log(myObject) // {myPropA: 10, myPropB: {}}\n * @example <caption>Property Map</caption>\n * StateEventProxy.create(myObject, 'myObject', {\n *     myPropA: 42,\n *     myPropB: {foo: 'bar'}\n * });\n * console.log(myObject) // {myPropA: 42, myPropB: {foo: 'bar'}}\n * myObject.myPropA = 10; // Emits event w/ args: 'myObject.myPropA', 10, myObject\n * myObject.myPropB.foo = 'foo'; // Does not emit an event.\n * console.log(myObject) // {myPropA: 10, myPropB: {foo: 'foo'}}\n * @example <caption>Property Map w/ Deep Proxy</caption>\n * StateEventProxy.create(myObject, 'myObject', {\n *     myPropA: [{id: 'foo'}, {id: 'bar'}],\n *     myPropB: {a: 1, b: 2, c: 3}\n * }, {deep: true});\n * console.log(myObject) // {myPropA: [{id: 'foo'}, {id: 'bar'}], myPropB: {a: 1, b: 2, c: 3}}\n * myObject.myPropB.a = 0; // Emits event w/ args: 'myObject.myPropB.a', 0, myObject.myPropB\n * myObject.myPropB = {}; // Emits event w/ args: 'myObject.myPropB', {}, myObject\n * myObject.myPropA[0].id = 42; // Emits event w/ args: 'myObject.myPropA[0].id', 42, myObject.myPropA[0]\n * myObject.myPropA.push('foobar'); // Emits event w/ args: 'myObject.myPropA', myObject.myPropA, myObject\n * console.log(myObject) // {myPropA: [{id: 42}, {id: 'bar'}, 'foobar'], myPropB: {}}\n\n */\nexport default class StateEventProxy {\n\n    /**\n     * Un-used constructor. Throws an error if instantiation is attempted.\n     * \n     * @access private\n     * @throws {Error}\n     */\n    constructor() {\n        throw new Error('Cannot instantiate static class StateEventProxy');\n    }\n\n    /**\n    * @return {ProxifiedObject}\n    */\n    static create(obj, scope, properties, options={}) {\n        let self = obj || {};\n\n        forEach(properties, (prop, k) => {\n            let name = isNumber(k) ? prop : k,\n                value = isNumber(k) ? options.def : prop;\n\n            this.proxifyProperty(\n                `${scope}.${name}`,\n                obj,\n                name,\n                value,\n                options);\n        });\n        return self;\n    }\n\n    /**\n     * @access private\n     */\n    static proxifyProperty(scope, obj, prop, value, {\n        deep=false, enumerable=true\n    }={}) {\n        let p = value;\n\n        if (deep && isPlainObject(value)) {\n            p = this.buildProxyObject(scope, value, { deep, enumerable });\n        } else if (deep && Array.isArray(value)) {\n            p = this.buildProxyArray(scope, obj, value, { deep, enumerable });\n        }\n        Object.defineProperty(obj, prop, {\n            get: () => p,\n            set: (v) => {\n                if (deep && isObject(v)) {\n                    v = Array.isArray(v)\n                        ? this.buildProxyArray(scope, obj, v, { deep, enumerable })\n                        : this.buildProxyObject(scope, v, { deep, enumerable });\n                }\n                this.emit(scope, v, obj);\n                p = v;\n                return true;\n            },\n            configurable: true,\n            enumerable\n        });\n    }\n\n    /**\n     * @access private\n     */\n    static buildProxyObject(scope, obj, o) {\n        let p = {};\n\n        forEach(obj, (v, k) => this.proxifyProperty(`${scope}.${k}`, p, k, v, o));\n        return p;\n    }\n\n    /**\n     * @access private\n     */\n    static buildProxyArray(scope, parent, arr, o) {\n        const ret = new Proxy(\n            arr.map((e, i) =>\n                isPlainObject(e) && this.buildProxyObject(`${scope}[${i}]`, e, o) ||\n                Array.isArray(e) && this.buildProxyArray(`${scope}[${i}]`, ret, e, o) || e),\n            {\n                get: (target, key) => {\n                    if (this.isMutateFn(key)) {\n                        return (...args) => {\n                            DISABLE[scope] = true;\n                            let v = target[key](...args);\n\n                            delete DISABLE[scope];\n                            this.emit(scope, ret, parent);\n                            return v;\n                        };\n                    }\n                    return target[key];\n                },\n                set: (target, i, v) => {\n                    if (!isNaN(i)) {\n                        v = isPlainObject(v) && this.buildProxyObject(`${scope}[${i}]`, v, o) ||\n                            Array.isArray(v) && this.buildProxyArray(`${scope}[${i}]`, ret, v, o) || v;\n                        this.emit(`${scope}[${i}]`, v, ret);\n                    }\n                    target[i] = v;\n                    return true;\n                },\n                deleteProperty: (target, i) => {\n                    if (!isNaN(i)) {\n                        this.emit(`${scope}[${i}]`, undefined, ret);\n                    }\n                    delete target[i];\n                    return true;\n                }\n            }\n        );\n\n        return ret;\n    }\n\n    /**\n     * @access private\n     */\n    static emit(scope, v, obj) {\n        if (!DISABLE[scope]) {\n            setTimeout(() => stateEvents.emit(scope, v, obj));\n        }\n    }\n\n    /**\n     * @access private\n     */\n    static isMutateFn(key) {\n        return [\n            'copyWithin',\n            'fill',\n            'pop',\n            'push',\n            'reverse',\n            'shift',\n            'sort',\n            'splice',\n            'unshift',\n        ].includes(key);\n    }\n}\n",
    "static": true,
    "longname": "/Users/zimmed/Bavel/bavel/src/StateEventProxy.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 174,
    "kind": "typedef",
    "name": "ScopedEvent",
    "memberof": "src/StateEventProxy.js",
    "static": true,
    "longname": "src/StateEventProxy.js~ScopedEvent",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "string"
      ],
      "optional": false,
      "name": "ScopedEvent"
    }
  },
  {
    "__docId__": 175,
    "kind": "typedef",
    "name": "ProxifiedObject",
    "memberof": "src/StateEventProxy.js",
    "static": true,
    "longname": "src/StateEventProxy.js~ProxifiedObject",
    "access": "public",
    "description": "",
    "emits": [
      {
        "types": [
          "ScopedEvent"
        ],
        "description": "emits event name scoped to property change for proxied\n properties."
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "ProxifiedObject"
    }
  },
  {
    "__docId__": 176,
    "kind": "variable",
    "name": "DISABLE",
    "memberof": "src/StateEventProxy.js",
    "static": true,
    "longname": "src/StateEventProxy.js~DISABLE",
    "access": "private",
    "export": true,
    "importPath": "bavel/src/StateEventProxy.js",
    "importStyle": "{DISABLE}",
    "description": "Exported disable map for testing purposes.",
    "lineNumber": 22,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 177,
    "kind": "class",
    "name": "StateEventProxy",
    "memberof": "src/StateEventProxy.js",
    "static": true,
    "longname": "src/StateEventProxy.js~StateEventProxy",
    "access": "public",
    "export": true,
    "importPath": "bavel/src/StateEventProxy.js",
    "importStyle": "StateEventProxy",
    "description": "The StateEventProxy class.",
    "examples": [
      "<caption>Setup</caption>\nconst StateEventProxy = require('./StateEventProxy');\nlet myObject = {};",
      "<caption>Property Keys</caption>\nStateEventProxy.create(myObject, 'myObject', ['myPropA', 'myPropB']);\nconsole.log(myObject) // {myPropA: undefined, myPropB: undeinfed}\nmyObject.myPropA = 10; // Emits event w/ args: 'myObject.myPropA', 10, myObject\nmyObject.myPropB = {}; // Emits event w/ args: 'myObject.myPropB', {}, myObject\nconsole.log(myObject) // {myPropA: 10, myPropB: {}}",
      "<caption>Property Map</caption>\nStateEventProxy.create(myObject, 'myObject', {\n    myPropA: 42,\n    myPropB: {foo: 'bar'}\n});\nconsole.log(myObject) // {myPropA: 42, myPropB: {foo: 'bar'}}\nmyObject.myPropA = 10; // Emits event w/ args: 'myObject.myPropA', 10, myObject\nmyObject.myPropB.foo = 'foo'; // Does not emit an event.\nconsole.log(myObject) // {myPropA: 10, myPropB: {foo: 'foo'}}",
      "<caption>Property Map w/ Deep Proxy</caption>\nStateEventProxy.create(myObject, 'myObject', {\n    myPropA: [{id: 'foo'}, {id: 'bar'}],\n    myPropB: {a: 1, b: 2, c: 3}\n}, {deep: true});\nconsole.log(myObject) // {myPropA: [{id: 'foo'}, {id: 'bar'}], myPropB: {a: 1, b: 2, c: 3}}\nmyObject.myPropB.a = 0; // Emits event w/ args: 'myObject.myPropB.a', 0, myObject.myPropB\nmyObject.myPropB = {}; // Emits event w/ args: 'myObject.myPropB', {}, myObject\nmyObject.myPropA[0].id = 42; // Emits event w/ args: 'myObject.myPropA[0].id', 42, myObject.myPropA[0]\nmyObject.myPropA.push('foobar'); // Emits event w/ args: 'myObject.myPropA', myObject.myPropA, myObject\nconsole.log(myObject) // {myPropA: [{id: 42}, {id: 'bar'}, 'foobar'], myPropB: {}}"
    ],
    "lineNumber": 58,
    "interface": false
  },
  {
    "__docId__": 178,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/StateEventProxy.js~StateEventProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/StateEventProxy.js~StateEventProxy#constructor",
    "access": "private",
    "description": "Un-used constructor. Throws an error if instantiation is attempted.",
    "lineNumber": 66,
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": ""
      }
    ]
  },
  {
    "__docId__": 179,
    "kind": "method",
    "name": "create",
    "memberof": "src/StateEventProxy.js~StateEventProxy",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/StateEventProxy.js~StateEventProxy.create",
    "access": "public",
    "description": "",
    "lineNumber": 73,
    "return": {
      "nullable": null,
      "types": [
        "ProxifiedObject"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      },
      {
        "name": "scope",
        "types": [
          "*"
        ]
      },
      {
        "name": "properties",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ]
  },
  {
    "__docId__": 180,
    "kind": "method",
    "name": "proxifyProperty",
    "memberof": "src/StateEventProxy.js~StateEventProxy",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/StateEventProxy.js~StateEventProxy.proxifyProperty",
    "access": "private",
    "description": "",
    "lineNumber": 93,
    "params": [
      {
        "name": "scope",
        "types": [
          "*"
        ]
      },
      {
        "name": "obj",
        "types": [
          "*"
        ]
      },
      {
        "name": "prop",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      },
      {
        "name": "objectPattern4",
        "optional": true,
        "types": [
          "{\"deep\": *, \"enumerable\": *}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 181,
    "kind": "method",
    "name": "buildProxyObject",
    "memberof": "src/StateEventProxy.js~StateEventProxy",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/StateEventProxy.js~StateEventProxy.buildProxyObject",
    "access": "private",
    "description": "",
    "lineNumber": 123,
    "params": [
      {
        "name": "scope",
        "types": [
          "*"
        ]
      },
      {
        "name": "obj",
        "types": [
          "*"
        ]
      },
      {
        "name": "o",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 182,
    "kind": "method",
    "name": "buildProxyArray",
    "memberof": "src/StateEventProxy.js~StateEventProxy",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/StateEventProxy.js~StateEventProxy.buildProxyArray",
    "access": "private",
    "description": "",
    "lineNumber": 133,
    "params": [
      {
        "name": "scope",
        "types": [
          "*"
        ]
      },
      {
        "name": "parent",
        "types": [
          "*"
        ]
      },
      {
        "name": "arr",
        "types": [
          "*"
        ]
      },
      {
        "name": "o",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 183,
    "kind": "method",
    "name": "emit",
    "memberof": "src/StateEventProxy.js~StateEventProxy",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/StateEventProxy.js~StateEventProxy.emit",
    "access": "private",
    "description": "",
    "lineNumber": 177,
    "params": [
      {
        "name": "scope",
        "types": [
          "*"
        ]
      },
      {
        "name": "v",
        "types": [
          "*"
        ]
      },
      {
        "name": "obj",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 184,
    "kind": "method",
    "name": "isMutateFn",
    "memberof": "src/StateEventProxy.js~StateEventProxy",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/StateEventProxy.js~StateEventProxy.isMutateFn",
    "access": "private",
    "description": "",
    "lineNumber": 186,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 185,
    "kind": "file",
    "name": "src/stateEvents.js",
    "content": "import EventEmitter from 'events';\n\nconst stateEvents = new EventEmitter();\n\n/**\n * The EventEmitter for proxified object state changes.\n *\n * @access public\n * @type {EventEmitter}\n */\nexport default stateEvents;\n",
    "static": true,
    "longname": "/Users/zimmed/Bavel/bavel/src/stateEvents.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "kind": "index",
    "content": "# Bavel\n\n### BabylonJS game framework with proper entity/component structure.\n\nYou can view the API docs, changelog, and current unittest report [here](https://zimmed.github.io/bavel)\n\n",
    "longname": "/Users/zimmed/Bavel/bavel/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"bavel\",\n  \"description\": \"BabylonJS game framework with proper entity/component structure.\",\n  \"authors\": [\n    \"zimmed@zimmed.io\"\n  ],\n  \"version\": \"0.2.0\",\n  \"license\": \"MIT\",\n  \"repository\": \"github.com/zimmed/bavel\",\n  \"main\": \"lib/index.js\",\n  \"scripts\": {\n    \"test-spec\": \"node ./node_modules/.bin/mocha --no-color --reporter markdown --require test/setup.js test/hooks.js 'test/**/*.spec.js' > build/test-spec.md\",\n    \"test-results\": \"node ./node_modules/.bin/mocha --no-color --reporter json --require test/setup.js test/hooks.js 'test/**/*.spec.js' > build/test-results.json && node build/test-results.js\",\n    \"test-save\": \"npm run test-spec && npm run test-results\",\n    \"test-run\": \"node ./node_modules/.bin/mocha --require test/setup.js test/hooks.js 'test/**/*.spec.js'\",\n    \"test\": \"npm run test-save && npm run test-run\",\n    \"compile\": \"rm -rf ./lib && node ./node_modules/.bin/babel -d lib/ src/\",\n    \"doc\": \"node ./node_modules/.bin/esdoc\",\n    \"build\": \"npm run test-run && npm run test-save && npm run doc && npm run compile\"\n  },\n  \"graphicsLibs\": [\n    \"babylonjs\"\n  ],\n  \"dependencies\": {\n    \"babylonjs\": \"^2.5.0\",\n    \"lodash.foreach\": \"^4.5.0\",\n    \"lodash.get\": \"^4.4.2\",\n    \"lodash.isempty\": \"^4.4.0\",\n    \"lodash.isnumber\": \"^3.0.3\",\n    \"lodash.isobject\": \"^3.0.2\",\n    \"lodash.isplainobject\": \"^4.0.6\",\n    \"lodash.mapvalues\": \"^4.6.0\",\n    \"lodash.merge\": \"^4.6.1\",\n    \"lodash.noop\": \"^3.0.1\",\n    \"lodash.omit\": \"^4.5.0\",\n    \"lodash.pickby\": \"^4.6.0\",\n    \"lodash.take\": \"^4.1.1\",\n    \"lodash.values\": \"^4.3.0\",\n    \"lodash.zipobject\": \"^4.1.3\",\n    \"moment\": \"^2.20.1\"\n  },\n  \"devDependencies\": {\n    \"babel-cli\": \"^6.26.0\",\n    \"babel-core\": \"^6.26.0\",\n    \"babel-plugin-module-resolver\": \"^3.1.0\",\n    \"babel-polyfill\": \"^6.26.0\",\n    \"babel-preset-env\": \"^1.6.1\",\n    \"babel-preset-es2015\": \"^6.24.1\",\n    \"babel-preset-node8\": \"^1.2.0\",\n    \"chai\": \"^4.1.2\",\n    \"esdoc\": \"^1.0.4\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"mocha\": \"^5.0.4\",\n    \"mock-require\": \"^3.0.1\",\n    \"sinon\": \"^4.4.6\",\n    \"sinon-chai\": \"^3.0.0\"\n  }\n}\n",
    "longname": "/Users/zimmed/Bavel/bavel/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]